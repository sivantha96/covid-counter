{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/figure/figure.component.dialog.ts","webpack:///src/app/component/figure/figure.component.dialog.html","webpack:///src/app/component/figure/figure.component.list.dialog.ts","webpack:///src/app/component/figure/figure.component.list.dialog.html","webpack:///src/app/component/figure/figure.component.ts","webpack:///src/app/component/figure/figure.component.html","webpack:///src/app/component/landing/landing.component.ts","webpack:///src/app/component/landing/landing.component.html","webpack:///src/app/component/landing/numers-only.directive.ts","webpack:///src/app/component/layout/header/header.component.ts","webpack:///src/app/component/layout/header/header.component.html","webpack:///src/app/component/page/thank-you/thank-you.component.ts","webpack:///src/app/component/page/thank-you/thank-you.component.html","webpack:///src/app/component/page/welcome/welcome.component.ts","webpack:///src/app/component/page/welcome/welcome.component.html","webpack:///src/app/modules/_alert/alert.component.ts","webpack:///src/app/modules/_alert/alert.component.html","webpack:///src/app/modules/_alert/alert.model.ts","webpack:///src/app/modules/_alert/alert.module.ts","webpack:///src/app/modules/_alert/alert.service.ts","webpack:///src/app/modules/_alert/index.ts","webpack:///src/app/service/user-info.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FigureComponentDialog","dialogRef","data","disableClose","userNotResponded","disease","severity","num","chip","onFocus","FigureComponentListDialog","dialog","alertService","listDialogRef","alertOptions","autoClose","area","open","width","height","maxHeight","diseases","autoFocus","isCompleted","areas","forEach","close","warn","onSubmit","FigureComponent","router","route","userInfoService","scriptUrl","showMan","symptomsArray","noOfSymptoms","length","cold","name","imageUrl","iconUrl","soreThroat","cough","loadScript","queryParams","subscribe","params","postData","JSON","parse","error","console","log","gender","areaType","afterClosed","symptom","position","map","indexOf","push","node","document","createElement","src","type","async","charset","getElementsByTagName","appendChild","postInfo","res","onSubmitMain","LandingComponent","activatedRoute","isOptional","ageGroups","value","viewValue","booleanGroups","dataForm","noOfFamily","required","numberOnly","foreignContact","closeContact","age","isEmptyGender","get","undefined","submitData","Object","assign","postQuery","family_members","is_visited_foreign_country","is_had_close_contact","navigate","stringify","event","inp","isNaN","notNumbers","onFormSubmit","StrictNumberOnlyDirective","elementRef","regex","RegExp","specialKeys","key","inputValue","nativeElement","concat","String","match","preventDefault","clipboardData","originalEvent","getData","regEx","test","HeaderComponent","ThankYouComponent","WelcomeComponent","AlertComponent","fade","alerts","alertSubscription","onAlert","alert","message","filter","x","keepAfterRouteChange","setTimeout","removeAlert","routeSubscription","events","clear","unsubscribe","includes","find","classes","alertTypeClass","Success","Info","Warning","join","Alert","init","AlertType","AlertModule","AlertService","subject","defaultId","asObservable","pipe","options","next","providedIn","httpOptions","headers","UserInfoService","http","baseUrl","userInfoUrl","post","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LandingComponent } from './component/landing/landing.component';\r\nimport { FigureComponent } from './component/figure/figure.component';\r\nimport { WelcomeComponent } from './component/page/welcome/welcome.component';\r\nimport { ThankYouComponent } from './component/page/thank-you/thank-you.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WelcomeComponent\r\n  },\r\n  {\r\n    path: 'landing',\r\n    component: LandingComponent\r\n  },\r\n  {\r\n    path: 'figure',\r\n    component: FigureComponent\r\n  },\r\n  {\r\n    path: 'thankyou',\r\n    component: ThankYouComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'covid-counter-app';\r\n}\r\n","<div>\r\n  <app-header></app-header>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>","import { StrictNumberOnlyDirective } from \"./component/landing/numers-only.directive\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FigureComponent } from \"./component/figure/figure.component\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatRippleModule } from \"@angular/material/core\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HeaderComponent } from \"./component/layout/header/header.component\";\r\nimport { LandingComponent } from \"./component/landing/landing.component\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatStepperModule } from \"@angular/material/stepper\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { WelcomeComponent } from \"./component/page/welcome/welcome.component\";\r\nimport { ThankYouComponent } from \"./component/page/thank-you/thank-you.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AlertModule } from \"./modules/_alert\";\r\nimport { FigureComponentDialog } from \"./component/figure/figure.component.dialog\";\r\nimport { FigureComponentListDialog } from \"./component/figure/figure.component.list.dialog\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LandingComponent,\r\n    FigureComponent,\r\n    FigureComponentDialog,\r\n    FigureComponentListDialog,\r\n    WelcomeComponent,\r\n    ThankYouComponent,\r\n    StrictNumberOnlyDirective,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatRippleModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    HttpClientModule,\r\n    AlertModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, Inject } from \"@angular/core\";\r\nimport {\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { DialogData } from \"src/app/model/figure\";\r\n\r\n@Component({\r\n  selector: \"app-figure-dialog\",\r\n  templateUrl: \"./figure.component.dialog.html\",\r\n})\r\nexport class FigureComponentDialog {\r\n  userNotResponded: boolean;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FigureComponentDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {\r\n    dialogRef.disableClose = true;\r\n    this.userNotResponded = data.disease.severity === 0;\r\n  }\r\n\r\n  onFocus(num) {\r\n    switch (num) {\r\n      case 1:\r\n        this.data.disease.severity = 1;\r\n        this.userNotResponded = false;\r\n        break;\r\n\r\n      case 2:\r\n        this.data.disease.severity = 2;\r\n        this.userNotResponded = false;\r\n        break;\r\n\r\n      case 3:\r\n        this.data.disease.severity = 3;\r\n        this.userNotResponded = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  isSelected(chip) {\r\n    return chip === this.data.disease.severity;\r\n  }\r\n}\r\n","<mat-grid-list gutterSize=\"5\" cols=\"1\" rowHeight=\"7:1\">\r\n  <mat-grid-tile rowspan=\"2\" >\r\n    <div class=\"row\" style=\"text-align: center;\">\r\n      <div class=\"col\">\r\n        <img width=\"100%\" [src]=\"data.disease.imageUrl\">\r\n      </div>\r\n    </div>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <div style=\"margin-top: 5%;\">\r\n      <h2>How is your {{ data.disease.name }} symptoms?</h2>\r\n    </div>\r\n    \r\n  </mat-grid-tile>\r\n  <mat-grid-tile rowspan=\"4\">\r\n    <mat-chip-list class=\"mat-chip-list-stacked\"\r\n      aria-orientation=\"vertical\">\r\n        <mat-chip color=\"accent\" selected=\"{{ isSelected(1) }}\" (focus)=\"onFocus(1)\">No symptoms</mat-chip>\r\n        <mat-chip color=\"primary\" selected=\"{{ isSelected(2) }}\" (focus)=\"onFocus(2)\">Mild symptoms</mat-chip>\r\n        <mat-chip color=\"warn\" selected=\"{{ isSelected(3) }}\" (focus)=\"onFocus(3)\">Severe symptoms</mat-chip>\r\n        <div style=\"padding:3%\"></div>\r\n        <mat-chip  [mat-dialog-close]=\"data\" disabled=\"{{ this.userNotResponded }}\">Submit</mat-chip>\r\n    </mat-chip-list>\r\n  </mat-grid-tile>\r\n</mat-grid-list>","import { Component, Inject } from \"@angular/core\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { ListDialogData, AlertOptions } from \"src/app/model/figure\";\r\nimport { FigureComponentDialog } from \"./figure.component.dialog\";\r\nimport { AlertService } from 'src/app/modules/_alert';\r\n\r\n@Component({\r\n  selector: \"app-figure-list-dialog\",\r\n  templateUrl: \"./figure.component.list.dialog.html\",\r\n  styleUrls: [\"./figure.component.css\"],\r\n})\r\nexport class FigureComponentListDialog {\r\n  alertOptions: AlertOptions;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    protected alertService: AlertService,\r\n    public listDialogRef: MatDialogRef<FigureComponentListDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: ListDialogData\r\n  ) {\r\n    listDialogRef.disableClose = true;\r\n    this.alertOptions = {\r\n      autoClose: true,\r\n      id: \"dialog-submit\"\r\n    }\r\n  }\r\n\r\n  handleClick(area) {\r\n    const dialogRef = this.dialog.open(FigureComponentDialog, {\r\n      width: \"90vh\",\r\n      height: \"none\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        disease: this.data.diseases[area],\r\n      },\r\n      autoFocus: false,\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    let isCompleted = true;\r\n    this.data.areas.forEach((disease) => {\r\n      if (this.data.diseases[disease].severity === 0) {\r\n        isCompleted = false;\r\n      }\r\n    });\r\n    if (isCompleted) {\r\n      this.listDialogRef.close(this.data);\r\n    } else {\r\n      this.alertService.warn(\"Not completed\", this.alertOptions)\r\n    }\r\n  }\r\n}\r\n","<div>\r\n    <mat-grid-list gutterSize=\"5\" cols=\"1\" rowHeight=\"4:1\">\r\n        <mat-grid-tile *ngFor=\"let area of data.areas\">\r\n            <div matRipple class=\"card\" (click)=\"handleClick(area)\"\r\n                style=\"flex: 1; height: 100%; cursor: pointer; border: 2ew\">\r\n                <div class=\"row\" style=\" background: url(../../../../../assets/figure/white.jpg)\">\r\n                    <div class=\"col-4\" style=\"text-align: center; padding-top: 2vmin;\">\r\n                        <img width=\"100%\" [src]=\"data.diseases[area].iconUrl\">\r\n                    </div>\r\n                    <div class=\"col-8\">\r\n                        <div style=\"text-align: left; padding-top: 10%;\">\r\n                            <h1 class=\"text-card\" style=\"margin-bottom: 0!important; margin-block-end: 0!important; line-height: 1em;\"> {{ data.diseases[area].name }} </h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n\r\n    </mat-grid-list>\r\n</div>\r\n<div class=\"row my-2\">\r\n    <div class=\"col button-container py-2\">\r\n        <alert id=\"dialog-submit\"></alert>\r\n        <button type=\"Button\" class=\"btn btn-primary btn-md w-75 rounded-pill\" (click)=\"onSubmit()\">Submit</button>\r\n    </div>\r\n</div>","import { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PostData, AlertOptions } from \"src/app/model/figure\";\r\nimport { UserInfoService } from \"src/app/service/user-info.service\";\r\nimport { AlertService } from \"src/app/modules/_alert\";\r\nimport { FigureComponentDialog } from \"./figure.component.dialog\";\r\nimport { FigureComponentListDialog } from \"./figure.component.list.dialog\";\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: \"app-figure\",\r\n  templateUrl: \"./figure.component.html\",\r\n  styleUrls: [\"./figure.component.css\"],\r\n})\r\nexport class FigureComponent implements OnInit {\r\n  diseases: any;\r\n  postData: PostData;\r\n  scriptUrl: string;\r\n  showMan: boolean;\r\n  symptomsArray: string[];\r\n  noOfSymptoms: number;\r\n  alertOptions: AlertOptions;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private userInfoService: UserInfoService,\r\n    protected alertService: AlertService\r\n  ) {\r\n    this.scriptUrl = \"assets/js/onChangeWindow.js\";\r\n    this.showMan = true;\r\n    this.symptomsArray = [\"cold\", \"soreThroat\", \"cough\"];\r\n    this.noOfSymptoms = this.symptomsArray.length;\r\n    this.alertOptions = {\r\n      autoClose: true,\r\n      id: \"main-submit\",\r\n    };\r\n    this.diseases = {\r\n      cold: {\r\n        name: \"Cold\",\r\n        imageUrl: \"../../../assets/figure/cold.jpg\",\r\n        iconUrl: \"../../../assets/figure/icon.jpg\",\r\n        severity: 0,\r\n      },\r\n      soreThroat: {\r\n        name: \"Sore Throat\",\r\n        imageUrl: \"../../../assets/figure/sore.jpg\",\r\n        iconUrl: \"../../../assets/figure/icon.jpg\",\r\n        severity: 0,\r\n      },\r\n      cough: {\r\n        name: \"Cough\",\r\n        imageUrl: \"../../../assets/figure/cough.jpg\",\r\n        iconUrl: \"../../../assets/figure/icon.jpg\",\r\n        severity: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // calling the map coordinates transforming script executor\r\n    this.loadScript();\r\n\r\n    // parse stringified data received from the previous route\r\n    this.route.queryParams.subscribe((params) => {\r\n      try {\r\n        this.postData = { ...JSON.parse(params.postData), diseases: [] };\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    // setting the showMan property\r\n    const gender = this.postData.gender;\r\n    if (gender === \"Male\") {\r\n      this.showMan = true;\r\n    } else {\r\n      this.showMan = false;\r\n    }\r\n  }\r\n\r\n  // handle the click of an area of the figure\r\n  handleClick(areaType) {\r\n    // Head area is clicked\r\n    if (areaType === \"head\") {\r\n      const listDialogRef = this.dialog.open(FigureComponentListDialog, {\r\n        width: \"90vh\",\r\n        height: \"none\",\r\n        maxHeight: \"90vh\",\r\n        data: {\r\n          areas: this.symptomsArray,\r\n          diseases: this.diseases,\r\n        },\r\n        autoFocus: false,\r\n      });\r\n\r\n      listDialogRef.afterClosed().subscribe((data) => {\r\n        if (typeof data !== \"undefined\") {\r\n          this.symptomsArray.forEach((symptom) => {\r\n            let disease = {\r\n              name: data.diseases[symptom].name,\r\n              severity: data.diseases[symptom].severity,\r\n            };\r\n\r\n            const position = this.postData.diseases\r\n              .map(function (e) {\r\n                return e.name;\r\n              })\r\n              .indexOf(disease.name);\r\n\r\n            if (position === -1) {\r\n              this.postData.diseases.push(disease);\r\n            } else {\r\n              this.postData.diseases[position].severity = disease.severity;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      // other area is clicked\r\n    } else {\r\n      const dialogRef = this.dialog.open(FigureComponentDialog, {\r\n        width: \"90vh\",\r\n        height: \"none\",\r\n        maxHeight: \"90vh\",\r\n        data: {\r\n          disease: this.diseases[areaType],\r\n        },\r\n        autoFocus: false,\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((data) => {\r\n        if (typeof data !== \"undefined\") {\r\n          const disease = {\r\n            name: data.disease.name,\r\n            severity: data.disease.severity,\r\n          };\r\n          const position = this.postData.diseases\r\n            .map(function (e) {\r\n              return e.name;\r\n            })\r\n            .indexOf(disease.name);\r\n\r\n          if (position === -1) {\r\n            this.postData.diseases.push(disease);\r\n          } else {\r\n            this.postData.diseases[position].severity = disease.severity;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // map coordinates transforming script executor\r\n  public loadScript() {\r\n    let node = document.createElement(\"script\");\r\n    node.src = this.scriptUrl;\r\n    node.type = \"text/javascript\";\r\n    node.async = true;\r\n    node.charset = \"utf-8\";\r\n    document.getElementsByTagName(\"head\")[0].appendChild(node);\r\n  }\r\n\r\n  onSubmitMain() {\r\n    if (this.noOfSymptoms === this.postData.diseases.length) {\r\n      this.userInfoService.postInfo(this.postData).subscribe((res) => {\r\n        console.log(res);\r\n      });\r\n    } else {\r\n      this.alertService.warn(\"Not completed\", this.alertOptions);\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\" style=\"height: 90vh; background: url(../../../../../assets/figure/white.jpg)\">\r\n    <div class=\"row\" style=\"height: 80%;\">\r\n        <div class=\"col \">\r\n            <ng-container *ngIf=\"showMan\">\r\n                <div>\r\n                    <img id=\"manImage\" class=\"img-human m-auto d-block\" src=\"../../../assets/figure/man.jpg\"\r\n                        usemap=\"#mapMan\" alt>\r\n                    <map name=\"mapMan\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"234,411,235\" (click)=\"handleClick('head')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"248,1081,249\" (click)=\"handleClick('soreThroat')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"249,1764,250\" (click)=\"handleClick('cough')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"261,2405,263\" (click)=\"handleClick('cold')\">\r\n                    </map>\r\n                </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!showMan\">\r\n                <div>\r\n                    <img class=\"img-human m-auto d-block\" src=\"../../../assets/figure/woman.jpg\" usemap=\"#mapWoman\" alt>\r\n                    <map name=\"mapWoman\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"248,410,247\" (click)=\"handleClick('head')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"246,1084,247\" (click)=\"handleClick('soreThroat')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"249,1756,248\" (click)=\"handleClick('cough')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"249,2434,249\" (click)=\"handleClick('cold')\">\r\n                    </map>\r\n                </div>\r\n            </ng-container>\r\n            <script>\r\n                // $('img').mapster();\r\n                $('map').imageMapResize();\r\n                // $('#manImage').mapster({\r\n                //     fillColor: 'ff0000',\r\n                //     fillOpacity: 0.3\r\n                // });\r\n            </script>\r\n        </div>\r\n    </div>\r\n    <div class=\"row \" style=\"height: 10%;\">\r\n        <div class=\"col button-container \">\r\n            <alert id=\"main-submit\" fade></alert>\r\n            <button type=\"Button\" class=\"btn btn-primary btn-lg w-75 rounded-pill\" (click)=onSubmitMain()>Submit</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, Validators, FormGroup, AbstractControl } from \"@angular/forms\";\r\nimport { ILandingdata } from \"./landing-data.model\";\r\n\r\ninterface IAge {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface IBoolean {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface IPostData{\r\n  family_members:number,\r\n  is_visited_foreign_country:string,\r\n  is_had_close_contact:string,\r\n  age:string,\r\n  gender:string\r\n}\r\n\r\n@Component({\r\n  selector: \"app-landing\",\r\n  templateUrl: \"./landing.component.html\",\r\n  styleUrls: [\"./landing.component.css\"],\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  \r\n\r\n  isOptional=false;\r\n\r\n  //options gender\r\n  gender: string[] = [\"Female\", \"Male\"];\r\n\r\n  //options age groups\r\n  ageGroups: IAge[] = [\r\n    { value: \"0\", viewValue: \"Infant (0-5 Years)\" },\r\n    { value: \"1\", viewValue: \"child (5-18 Years)\" },\r\n    { value: \"3\", viewValue: \"Young (18-30 Years)\" },\r\n    { value: \"4\", viewValue: \"Middle Age (30-60 Years)\" },\r\n    { value: \"5\", viewValue: \"Old (Above 60 Years)\" },\r\n  ];\r\n\r\n  //options recently aboard\r\n  booleanGroups: IBoolean[] = [\r\n    { value: \"Yes\", viewValue: \"Yes\" },\r\n    { value: \"No\", viewValue: \"No\" },\r\n  ];\r\n\r\n  dataForm = new FormGroup({\r\n    noOfFamily: new FormControl(\"\", [Validators.required, this.numberOnly]),\r\n    foreignContact: new FormControl(\"\", Validators.required),\r\n    closeContact: new FormControl(\"\", Validators.required),\r\n    gender: new FormControl(\"\", Validators.required),\r\n    age: new FormControl(\"\", Validators.required),\r\n  });\r\n\r\n  isGender(): boolean {\r\n    \r\n    if (this.dataForm.get('gender').value=='Male') return true;\r\n    else return false;\r\n  }\r\n\r\n  constructor(private router: Router, activatedRoute: ActivatedRoute) {}\r\n\r\n  //IsEmpty's\r\n  isEmptyAge():boolean{\r\n    return this.dataForm.get(\"age\")==undefined ? false :true\r\n  }\r\n\r\n  isEmptyGender:boolean=this.dataForm.get('gender').value==null ? true :false\r\n    \r\n    \r\n  \r\n\r\n  isEmptyNoOfFamily():boolean{\r\n    return this.dataForm.get(\"noOfFamily\").value==null ? true :false\r\n  }\r\n\r\n  isEmptyforeignContact():boolean{\r\n    return this.dataForm.get(\"foreignContact\").value==null ? true :false\r\n  }\r\n\r\n  isEmptycloseContact():boolean{\r\n    return this.dataForm.get(\"closeContact\").value==null ? true :false\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onFormSubmit(): void {\r\n    const submitData = Object.assign({}, this.dataForm.value);\r\n\r\n    let postQuery:IPostData = {\r\n      gender: submitData.gender,\r\n      age: submitData.age,\r\n      family_members: submitData.noOfFamily,\r\n      is_visited_foreign_country: submitData.foreignContact,\r\n      is_had_close_contact: submitData.closeContact,\r\n    };\r\n\r\n    this.router.navigate([\"./figure\"], {\r\n      queryParams: {\r\n        postData: JSON.stringify(postQuery),\r\n      },\r\n    });\r\n  }\r\n\r\n  //custom validation\r\n\r\n\r\n  // numberOnly(control: AbstractControl): {[key:string]:boolean} | null {\r\n  //   const inputString = String.fromCharCode(control.value);\r\n  //   const regex: RegExp = new RegExp(/^[0-9]+([0-9]*){0,1}$/g)\r\n  //   if (inputString && !String(inputString).match(regex)) {\r\n  //     alert(!String(inputString))\r\n  //     return {\"chaNotAllowed\":true};\r\n  //   }\r\n  //   else\r\n  //   return null \r\n  // }\r\n\r\n  numberOnly(event: AbstractControl): {[key:string]:boolean}| null {\r\n    const inp = event.value ? event.value : event.value;\r\n    if (isNaN(inp)) { \r\n      console.log(\"error cha present\")\r\n      return {notNumbers:true};\r\n      \r\n    }\r\n    else{\r\n      return null;\r\n    }\r\n   \r\n  }\r\n\r\n  \r\n  // forbiddenNameValidator(nameRe: RegExp): ValidatorFn {\r\n  //   return (control: AbstractControl): {[key: string]: any} | null => {\r\n  //     const forbidden = nameRe.test(control.value);\r\n  //     return forbidden ? {'forbiddenName': {value: control.value}} : null;\r\n  //   };\r\n  // }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row justify-content-center\">\r\n        <mat-card class=\"col-12 col-md-6 col-sm-6 card-container\">\r\n            <div class=\"justify-content-center\">\r\n                <div class=\"header-container\">\r\n                    <!-- <mat-card-title>COVID-19</mat-card-title>\r\n                    <mat-card-subtitle>Fill all the details to continue</mat-card-subtitle> -->\r\n                </div>\r\n                <mat-horizontal-stepper linear='true'>\r\n                    <mat-card-content>\r\n                        \r\n                        <!-- <form [formGroup]=\"dataForm\">\r\n                            <mat-step [stepControl]=\"dataForm.get('age')\">\r\n                                \r\n                                    <input formControlName=\"age\" type=\"text\">\r\n                               \r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary btn-sm btn-block\"\r\n                                        matStepperNext>Next</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n                            <mat-step [stepControl]=\"dataForm.get('gender')\">\r\n                                \r\n                                    <input formControlName=\"gender\" type=\"text\">\r\n                             \r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary btn-sm btn-block\"\r\n                                        matStepperNext>Next</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n                            <mat-step>\r\n                                \r\n                                <input formControlName=\"gender\" type=\"text\">\r\n                         \r\n                            <mat-card-actions class=\"button-container\">\r\n                                <button type=\"button\" class=\"btn btn-secondary btn-sm btn-block\"\r\n                                    matStepperNext>Next</button>\r\n                            </mat-card-actions>\r\n                        </mat-step>\r\n                            </form> -->\r\n\r\n                        \r\n                        \r\n\r\n\r\n\r\n\r\n                        <form [formGroup]=\"dataForm\" (ngSubmit)=\"onFormSubmit()\" class=\"form-container\">\r\n                            <!-- gender -->\r\n                            <mat-step [stepControl]=\"dataForm.get('gender')\">\r\n                                <div class=\"field-container\">\r\n                                    <div class=\"image-container\">\r\n                                        <img src=\"../../../assets/landing/gender.jpg\" alt=\"\">\r\n                                    </div>\r\n\r\n                                    <label>Select your Gender</label>\r\n                                    <mat-radio-group class=\"example-radio-group\"\r\n                                        aria-labelledby=\"example-radio-group-label\" formControlName=\"gender\">\r\n                                        <mat-radio-button class=\"example-radio-button\"  *ngFor=\"let i of gender\"\r\n                                            [value]=\"i\" required>\r\n                                            {{ i }}\r\n                                        </mat-radio-button>\r\n                                    </mat-radio-group>\r\n                                    <!-- <div class=\"help-block\" *ngIf=\"gender.touched &&  gender.invalid\">\r\n                                        Gender is requried\r\n                                    </div> -->\r\n                                    \r\n                                </div>\r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" [disabled]=\"!dataForm.get('gender').valid\" class=\"btn btn-secondary btn-sm btn-block\"\r\n                                        matStepperNext>Next</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n\r\n\r\n                            <!-- age -->\r\n                            <mat-step [stepControl]=\"dataForm.get('age')\">\r\n                                <div class=\"image-container\">\r\n                                    <img src=\"../../../assets/landing/maleAging.jpg\" alt=\"\" *ngIf=\"isGender()\">\r\n\r\n                                    <img src=\"../../../assets/landing/femaleAging.jpg\" alt=\"\" *ngIf=\"!isGender()\">\r\n                                </div>\r\n\r\n                                <mat-form-field class=\"field-container\" style=\"width:60%\">\r\n                                    <mat-label>Select your age</mat-label>\r\n                                    <mat-select formControlName=\"age\">\r\n                                        <mat-option *ngFor=\"let age of ageGroups\" [value]=\"age.value\">\r\n                                            {{age.viewValue}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" mat-button matStepperPrevious\r\n                                        class=\"btn btn-secondary btn-sm button-style\">Previous</button>\r\n                                    <button type=\"button\" [disabled]=\"!dataForm.get('age').valid\" class=\"btn btn-secondary btn-sm button-style\" mat-button\r\n                                        matStepperNext>Continue</button>\r\n                                </mat-card-actions>\r\n\r\n                            </mat-step>\r\n\r\n\r\n                            <!-- noOfFamily -->\r\n                            <mat-step [stepControl]=\"dataForm.get('noOfFamily')\">\r\n                                <div class=\"image-container\">\r\n                                    <img src=\"../../../assets/landing/family.jpg\" alt=\"\">\r\n                                </div>\r\n                                <mat-form-field class=\"field-container\" style=\"width:60%\">\r\n                                    <label>How many family members in your family?</label>\r\n                                    <input  matInput formControlName=\"noOfFamily\"  placeholder=\"\">\r\n                                    \r\n                                        <mat-hint>enter a number</mat-hint>\r\n  \r\n                                        <mat-error *ngIf=\"dataForm.get('noOfFamily').invalid && (dataForm.get('noOfFamily').dirty || dataForm.get('noOfFamily').touched)  && (dataForm.get('noOfFamily').errors.required)\">\r\n                                            this field is required\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\"dataForm.get('noOfFamily').invalid && (dataForm.get('noOfFamily').dirty || dataForm.get('noOfFamily').touched)  && (dataForm.get('noOfFamily').errors.numberOnly)\">\r\n                                            please enter a nummeric value\r\n                                        </mat-error>\r\n                                 \r\n                                    \r\n\r\n                                    <!-- <mat-error>This field is required</mat-error> -->\r\n                                    \r\n                                    \r\n                                </mat-form-field>\r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" mat-button matStepperPrevious\r\n                                        class=\"btn btn-secondary btn-sm button-style\">Previous</button>\r\n                                    <button type=\"button\"  [disabled]=\"!dataForm.get('noOfFamily').valid\" class=\"btn btn-secondary btn-sm button-style\" mat-button\r\n                                        matStepperNext>Continue</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n\r\n                            <!-- youForeign -->\r\n                            <mat-step [stepControl]=\"dataForm.get('foreignContact')\" >\r\n                                <div class=\"image-container\">\r\n                                    <img src=\"../../../assets/landing/familyAbroad.jpg\" alt=\"\">\r\n                                </div>\r\n                                <div class=\"field-container\">\r\n                                    <label>You or any of your family member recently travelled overseas ?</label>\r\n                                    <mat-radio-group aria-labelledby=\"example-radio-group-label\"\r\n                                        class=\"example-radio-group\" formControlName=\"foreignContact\">\r\n                                        <mat-radio-button class=\"example-radio-button\" *ngFor=\"let ans of booleanGroups\"\r\n                                            [value]=\"ans.value\">\r\n                                            {{ans.viewValue}}\r\n                                        </mat-radio-button>\r\n                                    </mat-radio-group>\r\n                                </div>\r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" mat-button matStepperPrevious\r\n                                        class=\"btn btn-secondary btn-sm button-style\">Previous</button>\r\n                                    <button type=\"button\"  [disabled]=\"!dataForm.get('foreignContact').valid\" class=\"btn btn-secondary btn-sm button-style\" mat-button\r\n                                        matStepperNext>Continue</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n\r\n                            <!-- familyForeign -->\r\n                            <mat-step [stepControl]=\"dataForm.get('closeContact')\" >\r\n                                <div class=\"image-container\">\r\n                                    <img src=\"../../../assets/landing/maleAbroad.jpg\" *ngIf=\"isGender()\" alt=\"\">\r\n                                    <img src=\"../../../assets/landing/femaleAbroad.jpg\" *ngIf=\"!isGender()\" alt=\"\">\r\n                                </div>\r\n                                <div class=\"field-container\">\r\n                                    <label>Have you had any close contact with COVID 19 patient?</label>\r\n                                    <mat-radio-group aria-labelledby=\"example-radio-group-label\"\r\n                                        class=\"example-radio-group\" formControlName=\"closeContact\">\r\n                                        <mat-radio-button class=\"example-radio-button\" *ngFor=\"let ans of booleanGroups\"\r\n                                            [value]=\"ans.value\">\r\n                                            {{ans.viewValue}}\r\n                                        </mat-radio-button>\r\n                                    </mat-radio-group>\r\n                                </div>\r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" mat-button matStepperPrevious\r\n                                        class=\"btn btn-secondary btn-sm button-style\">Previous</button>\r\n                                    <button type=\"button\" type=\"submit\" class=\"btn btn-secondary btn-sm button-style\"\r\n                                    [disabled]=\"!dataForm.get('closeContact').valid\" type=\"submit\" (click)=\"onFormSubmit()\" mat-raised-button matSteppeNext>Continue</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n                        </form>\r\n                    </mat-card-content>\r\n                </mat-horizontal-stepper>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Directive, ElementRef, Input, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[NumberOnly]'\r\n})\r\nexport class StrictNumberOnlyDirective {\r\n\t\r\n  //private regex: RegExp = new RegExp('^[0-9]*$');\r\n  private regex: RegExp = new RegExp(/^[0-9]+([0-9]*){0,1}$/g);  //Decimal Number\r\n  private specialKeys: Array<string> = ['Backspace','ArrowLeft','ArrowRight'];\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n\r\n  /**\r\n   * Key board action\r\n   * @param event \r\n   */\r\n  @HostListener('keydown', ['$event'])onKeyDown(event: KeyboardEvent) {\r\n    if (this.specialKeys.indexOf(event.key) !== -1) {\r\n      return;\r\n    }\r\n    const inputValue: string = this.elementRef.nativeElement.value.concat(event.key);\r\n    console.log(event.key);\r\n    if (inputValue && !String(inputValue).match(this.regex)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Copy Paste action \r\n   * @param event \r\n   */\r\n  @HostListener('paste', ['$event']) onPaste(event) {\r\n      const clipboardData = (event.originalEvent || event).clipboardData.getData('text/plain');\r\n      if (clipboardData) {\r\n          const regEx = new RegExp('^[0-9]*$');\r\n          if(!regEx.test(clipboardData)) {\r\n              event.preventDefault();\r\n          }\r\n      }\r\n      return;\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark \">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\">Covid Counter</a>\r\n        <form class=\"form-inline\">\r\n            <button class=\"btn btn-sm btn-outline-light\" type=\"button\">සිංහල</button>\r\n            <button class=\"btn btn-sm btn-outline-light\" type=\"button\">English</button>\r\n        </form>\r\n    </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-thank-you',\r\n  templateUrl: './thank-you.component.html',\r\n  styleUrls: ['./thank-you.component.css']\r\n})\r\nexport class ThankYouComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>thank-you works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div style=\"text-align: center; padding-top: 50%;\">\r\n    <h1>This is the welcome page!</h1>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\r\nimport { Router, NavigationStart } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { Alert, AlertType } from \"./alert.model\";\r\nimport { AlertService } from \"./alert.service\";\r\n\r\n@Component({ selector: \"alert\", templateUrl: \"alert.component.html\" })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n  @Input() id = \"default-alert\";\r\n  @Input() fade = true;\r\n\r\n  alerts: Alert[] = [];\r\n  alertSubscription: Subscription;\r\n  routeSubscription: Subscription;\r\n\r\n  constructor(private router: Router, private alertService: AlertService) {}\r\n\r\n  ngOnInit() {\r\n    // subscribe to new alert notifications\r\n    this.alertSubscription = this.alertService\r\n      .onAlert(this.id)\r\n      .subscribe((alert) => {\r\n        // clear alerts when an empty alert is received\r\n        if (!alert.message) {\r\n          // filter out alerts without 'keepAfterRouteChange' flag\r\n          this.alerts = this.alerts.filter((x) => x.keepAfterRouteChange);\r\n\r\n          // remove 'keepAfterRouteChange' flag on the rest\r\n          this.alerts.forEach((x) => delete x.keepAfterRouteChange);\r\n          return;\r\n        }\r\n\r\n        // add alert to array\r\n        this.alerts.push(alert);\r\n\r\n        // auto close alert if required\r\n        if (alert.autoClose) {\r\n          setTimeout(() => this.removeAlert(alert), 3000);\r\n        }\r\n      });\r\n\r\n    // clear alerts on location change\r\n    this.routeSubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationStart) {\r\n        this.alertService.clear(this.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // unsubscribe to avoid memory leaks\r\n    this.alertSubscription.unsubscribe();\r\n    this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    // check if already removed to prevent error on auto close\r\n    if (!this.alerts.includes(alert)) return;\r\n\r\n    if (this.fade) {\r\n      // fade out alert\r\n      this.alerts.find((x) => x === alert).fade = true;\r\n\r\n      // remove alert after faded out\r\n      setTimeout(() => {\r\n        this.alerts = this.alerts.filter((x) => x !== alert);\r\n      }, 250);\r\n    } else {\r\n      // remove alert\r\n      this.alerts = this.alerts.filter((x) => x !== alert);\r\n    }\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = [\"alert\", \"alert-dismissable\", \"w-75\", \"mx-auto\", \"rounded-pill\"];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: \"alert alert-success\",\r\n      [AlertType.Error]: \"alert alert-danger\",\r\n      [AlertType.Info]: \"alert alert-info\",\r\n      [AlertType.Warning]: \"alert alert-warning\",\r\n    };\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push(\"fade\");\r\n    }\r\n\r\n    return classes.join(\" \");\r\n  }\r\n}\r\n","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\" style=\"cursor: pointer;\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\" style=\"cursor: default;\"></span>\r\n</div>","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AlertComponent } from './alert.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [AlertComponent],\r\n    exports: [AlertComponent]\r\n})\r\nexport class AlertModule { }","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Alert, AlertType } from './alert.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","export * from './alert.module';\r\nexport * from './alert.service';\r\nexport * from './alert.model';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { PostData } from 'src/app/model/figure'\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserInfoService {\r\n  baseUrl: string = 'https://192.168.8.1:3001'\r\n  userInfoUrl: string = this.baseUrl  + \"/users/symptoms\"\r\n  \r\n  constructor(private http:HttpClient) { }\r\n\r\n  postInfo(data: PostData):Observable<PostData> {\r\n    return this.http.post<PostData>(this.userInfoUrl, data, httpOptions)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}