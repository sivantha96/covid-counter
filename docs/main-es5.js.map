{"version":3,"sources":["webpack:///src/app/component/landing/numers-only.directive.ts","webpack:///src/app/modules/_alert/alert.component.ts","webpack:///src/app/modules/_alert/alert.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/component/figure/figure.component.list.dialog.ts","webpack:///src/app/component/figure/figure.component.list.dialog.html","webpack:///src/app/modules/_alert/index.ts","webpack:///src/app/component/figure/figure.component.ts","webpack:///src/app/component/figure/figure.component.html","webpack:///src/app/modules/_alert/alert.model.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/_alert/alert.module.ts","webpack:///src/app/component/layout/header/header.component.ts","webpack:///src/app/component/layout/header/header.component.html","webpack:///src/app/component/page/welcome/welcome.component.ts","webpack:///src/app/component/page/welcome/welcome.component.html","webpack:///src/app/component/page/thank-you/thank-you.component.ts","webpack:///src/app/component/page/thank-you/thank-you.component.html","webpack:///src/app/component/figure/figure.component.dialog.ts","webpack:///src/app/component/figure/figure.component.dialog.html","webpack:///src/app/modules/_alert/alert.service.ts","webpack:///src/app/service/user-info.service.ts","webpack:///src/app/component/landing/landing.component.ts","webpack:///src/app/component/landing/landing.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["StrictNumberOnlyDirective","elementRef","regex","RegExp","specialKeys","event","indexOf","key","inputValue","nativeElement","value","concat","console","log","String","match","preventDefault","clipboardData","originalEvent","getData","regEx","test","selector","AlertComponent","router","alertService","id","fade","alerts","alertSubscription","onAlert","subscribe","alert","message","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","clear","unsubscribe","includes","find","classes","alertTypeClass","Success","Error","Info","Warning","type","join","templateUrl","environment","production","FigureComponentListDialog","dialog","listDialogRef","data","disableClose","alertOptions","area","dialogRef","open","width","height","maxHeight","disease","diseases","autoFocus","isCompleted","areas","severity","close","warn","onSubmit","styleUrls","FigureComponent","route","userInfoService","scriptUrl","showMan","symptomsArray","noOfSymptoms","length","cold","name","imageUrl","iconUrl","soreThroat","cough","loadScript","queryParams","params","postData","JSON","parse","error","gender","areaType","afterClosed","symptom","position","map","e","node","document","createElement","src","async","charset","getElementsByTagName","appendChild","postInfo","res","onSubmitMain","Alert","init","Object","assign","AlertType","AppComponent","title","AppModule","declarations","imports","providers","bootstrap","AlertModule","exports","HeaderComponent","WelcomeComponent","navigate","onClick","ThankYouComponent","FigureComponentDialog","userNotResponded","num","chip","onFocus","AlertService","subject","defaultId","asObservable","pipe","options","next","providedIn","httpOptions","headers","UserInfoService","http","baseUrl","userInfoUrl","post","LandingComponent","activatedRoute","isOptional","ageGroups","viewValue","booleanGroups","dataForm","noOfFamily","required","numberOnly","foreignContact","closeContact","age","isEmptyGender","get","undefined","submitData","postQuery","family_members","is_visited_foreign_country","is_had_close_contact","stringify","inp","isNaN","notNumbers","onFormSubmit","routes","path","component","AppRoutingModule","forRoot","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","code","keys","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaA,yB;AAKX,2CAAoBC,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA,CAAwB,CAH5C;;AACQ,eAAAC,KAAA,GAAgB,IAAIC,MAAJ,CAAW,wBAAX,CAAhB,CAEoC,CAFmB;;AACvD,eAAAC,WAAA,GAA6B,CAAC,WAAD,EAAa,WAAb,EAAyB,YAAzB,CAA7B;AACuC;AAG/C;;;;;;;;oCAI8CC,K,EAAsB;AAClE,gBAAI,KAAKD,WAAL,CAAiBE,OAAjB,CAAyBD,KAAK,CAACE,GAA/B,MAAwC,CAAC,CAA7C,EAAgD;AAC9C;AACD;;AACD,gBAAMC,UAAU,GAAW,KAAKP,UAAL,CAAgBQ,aAAhB,CAA8BC,KAA9B,CAAoCC,MAApC,CAA2CN,KAAK,CAACE,GAAjD,CAA3B;AACAK,mBAAO,CAACC,GAAR,CAAYR,KAAK,CAACE,GAAlB;;AACA,gBAAIC,UAAU,IAAI,CAACM,MAAM,CAACN,UAAD,CAAN,CAAmBO,KAAnB,CAAyB,KAAKb,KAA9B,CAAnB,EAAyD;AACvDG,mBAAK,CAACW,cAAN;AACD;;AAED;AACD;AAED;;;;;;;kCAI2CX,K,EAAO;AAC9C,gBAAMY,aAAa,GAAG,CAACZ,KAAK,CAACa,aAAN,IAAuBb,KAAxB,EAA+BY,aAA/B,CAA6CE,OAA7C,CAAqD,YAArD,CAAtB;;AACA,gBAAIF,aAAJ,EAAmB;AACf,kBAAMG,KAAK,GAAG,IAAIjB,MAAJ,CAAW,UAAX,CAAd;;AACA,kBAAG,CAACiB,KAAK,CAACC,IAAN,CAAWJ,aAAX,CAAJ,EAA+B;AAC3BZ,qBAAK,CAACW,cAAN;AACH;AACJ;;AACD;AACH;;;;;;;yBAtCUhB,yB,EAAyB,yH;AAAA,O;;;cAAzBA,yB;AAAyB,2C;AAAA;AAAA;;;;;;;;;;;;wEAAzBA,yB,EAAyB;gBAHrC,uDAGqC;iBAH3B;AACTsB,oBAAQ,EAAE;AADD,W;AAG2B,U;;;;;;kBAYnC,0D;mBAAa,S,EAAW,CAAC,QAAD,C;;;kBAiBxB,0D;mBAAa,O,EAAS,CAAC,QAAD,C;;;;;;;;;;;;;;;;;;;;AClCzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACI;;AAAiB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsD;;AAAO;;AAC9E;;AACJ;;;;;;;;AAHkC;;AAExB;;AAAA;;;;UDMGC,c;AAQX,gCAAoBC,MAApB,EAA4CC,YAA5C,EAAwE;AAAA;;AAApD,eAAAD,MAAA,GAAAA,MAAA;AAAwB,eAAAC,YAAA,GAAAA,YAAA;AAPnC,eAAAC,EAAA,GAAK,eAAL;AACA,eAAAC,IAAA,GAAO,IAAP;AAET,eAAAC,MAAA,GAAkB,EAAlB;AAI0E;;;;qCAE/D;AAAA;;AACT;AACA,iBAAKC,iBAAL,GAAyB,KAAKJ,YAAL,CACtBK,OADsB,CACd,KAAKJ,EADS,EAEtBK,SAFsB,CAEZ,UAACC,KAAD,EAAW;AACpB;AACA,kBAAI,CAACA,KAAK,CAACC,OAAX,EAAoB;AAClB;AACA,qBAAI,CAACL,MAAL,GAAc,KAAI,CAACA,MAAL,CAAYM,MAAZ,CAAmB,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACC,oBAAT;AAAA,iBAAnB,CAAd,CAFkB,CAIlB;;AACA,qBAAI,CAACR,MAAL,CAAYS,OAAZ,CAAoB,UAACF,CAAD;AAAA,yBAAO,OAAOA,CAAC,CAACC,oBAAhB;AAAA,iBAApB;;AACA;AACD,eATmB,CAWpB;;;AACA,mBAAI,CAACR,MAAL,CAAYU,IAAZ,CAAiBN,KAAjB,EAZoB,CAcpB;;;AACA,kBAAIA,KAAK,CAACO,SAAV,EAAqB;AACnBC,0BAAU,CAAC;AAAA,yBAAM,KAAI,CAACC,WAAL,CAAiBT,KAAjB,CAAN;AAAA,iBAAD,EAAgC,IAAhC,CAAV;AACD;AACF,aApBsB,CAAzB,CAFS,CAwBT;;AACA,iBAAKU,iBAAL,GAAyB,KAAKlB,MAAL,CAAYmB,MAAZ,CAAmBZ,SAAnB,CAA6B,UAAC1B,KAAD,EAAW;AAC/D,kBAAIA,KAAK,YAAY,+DAArB,EAAsC;AACpC,qBAAI,CAACoB,YAAL,CAAkBmB,KAAlB,CAAwB,KAAI,CAAClB,EAA7B;AACD;AACF,aAJwB,CAAzB;AAKD;;;wCAEa;AACZ;AACA,iBAAKG,iBAAL,CAAuBgB,WAAvB;AACA,iBAAKH,iBAAL,CAAuBG,WAAvB;AACD;;;sCAEWb,K,EAAc;AAAA;;AACxB;AACA,gBAAI,CAAC,KAAKJ,MAAL,CAAYkB,QAAZ,CAAqBd,KAArB,CAAL,EAAkC;;AAElC,gBAAI,KAAKL,IAAT,EAAe;AACb;AACA,mBAAKC,MAAL,CAAYmB,IAAZ,CAAiB,UAACZ,CAAD;AAAA,uBAAOA,CAAC,KAAKH,KAAb;AAAA,eAAjB,EAAqCL,IAArC,GAA4C,IAA5C,CAFa,CAIb;;AACAa,wBAAU,CAAC,YAAM;AACf,sBAAI,CAACZ,MAAL,GAAc,MAAI,CAACA,MAAL,CAAYM,MAAZ,CAAmB,UAACC,CAAD;AAAA,yBAAOA,CAAC,KAAKH,KAAb;AAAA,iBAAnB,CAAd;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aARD,MAQO;AACL;AACA,mBAAKJ,MAAL,GAAc,KAAKA,MAAL,CAAYM,MAAZ,CAAmB,UAACC,CAAD;AAAA,uBAAOA,CAAC,KAAKH,KAAb;AAAA,eAAnB,CAAd;AACD;AACF;;;mCAEQA,K,EAAc;AAAA;;AACrB,gBAAI,CAACA,KAAL,EAAY;AAEZ,gBAAMgB,OAAO,GAAG,CAAC,OAAD,EAAU,mBAAV,EAA+B,MAA/B,EAAuC,SAAvC,EAAkD,cAAlD,CAAhB;AAEA,gBAAMC,cAAc,2DACjB,uDAAUC,OADO,EACG,qBADH,oCAEjB,uDAAUC,KAFO,EAEC,oBAFD,oCAGjB,uDAAUC,IAHO,EAGA,kBAHA,oCAIjB,uDAAUC,OAJO,EAIG,qBAJH,mBAApB;AAOAL,mBAAO,CAACV,IAAR,CAAaW,cAAc,CAACjB,KAAK,CAACsB,IAAP,CAA3B;;AAEA,gBAAItB,KAAK,CAACL,IAAV,EAAgB;AACdqB,qBAAO,CAACV,IAAR,CAAa,MAAb;AACD;;AAED,mBAAOU,OAAO,CAACO,IAAR,CAAa,GAAb,CAAP;AACD;;;;;;;yBArFUhC,c,EAAc,uH,EAAA,4H;AAAA,O;;;cAAdA,c;AAAc,8B;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,iJ;AAAA;AAAA;ACR3B;;;;AAAK;;;;;;;;;wEDQQA,c,EAAc;gBAD1B,uDAC0B;iBADhB;AAAED,oBAAQ,EAAE,OAAZ;AAAqBkC,uBAAW,EAAE;AAAlC,W;AACgB,U;;;;;;;;kBACxB;;;kBACA;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMC,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEQ;;AACI;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAExB;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAA4G;;AAA+B;;AAC/I;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AATkC;;AAAA;;AAI8F;;AAAA;;;;UDI3HC,yB;AAGX,2CACSC,MADT,EAEYnC,YAFZ,EAGSoC,aAHT,EAIkCC,IAJlC,EAIsD;AAAA;;AAH7C,eAAAF,MAAA,GAAAA,MAAA;AACG,eAAAnC,YAAA,GAAAA,YAAA;AACH,eAAAoC,aAAA,GAAAA,aAAA;AACyB,eAAAC,IAAA,GAAAA,IAAA;AAEhCD,uBAAa,CAACE,YAAd,GAA6B,IAA7B;AACA,eAAKC,YAAL,GAAoB;AAClBzB,qBAAS,EAAE,IADO;AAElBb,cAAE,EAAE;AAFc,WAApB;AAID;;;;sCAEWuC,I,EAAM;AAChB,gBAAMC,SAAS,GAAG,KAAKN,MAAL,CAAYO,IAAZ,CAAiB,8EAAjB,EAAwC;AACxDC,mBAAK,EAAE,MADiD;AAExDC,oBAAM,EAAE,MAFgD;AAGxDC,uBAAS,EAAE,MAH6C;AAIxDR,kBAAI,EAAE;AACJS,uBAAO,EAAE,KAAKT,IAAL,CAAUU,QAAV,CAAmBP,IAAnB;AADL,eAJkD;AAOxDQ,uBAAS,EAAE;AAP6C,aAAxC,CAAlB;AASD;;;qCAEU;AAAA;;AACT,gBAAIC,WAAW,GAAG,IAAlB;AACA,iBAAKZ,IAAL,CAAUa,KAAV,CAAgBtC,OAAhB,CAAwB,UAACkC,OAAD,EAAa;AACnC,kBAAI,MAAI,CAACT,IAAL,CAAUU,QAAV,CAAmBD,OAAnB,EAA4BK,QAA5B,KAAyC,CAA7C,EAAgD;AAC9CF,2BAAW,GAAG,KAAd;AACD;AACF,aAJD;;AAKA,gBAAIA,WAAJ,EAAiB;AACf,mBAAKb,aAAL,CAAmBgB,KAAnB,CAAyB,KAAKf,IAA9B;AACD,aAFD,MAEO;AACL,mBAAKrC,YAAL,CAAkBqD,IAAlB,CAAuB,eAAvB,EAAwC,KAAKd,YAA7C;AACD;AACF;;;;;;;yBAxCUL,yB,EAAyB,mI,EAAA,mI,EAAA,sI,EAAA,gEAO1B,wEAP0B,C;AAOX,O;;;cAPdA,yB;AAAyB,+C;AAAA,gB;AAAA,e;AAAA,wtB;AAAA;AAAA;ACftC;;AACI;;AACI;;AAgBJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAuE;AAAA,qBAAS,IAAAoB,QAAA,EAAT;AAAmB,aAAnB;;AAAqB;;AAAM;;AACtG;;AACJ;;;;AAvBuB;;AAAA;;;;;;;;;wEDaVpB,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTrC,oBAAQ,EAAE,wBADD;AAETkC,uBAAW,EAAE,qCAFJ;AAGTwB,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAK2B,U;;;;;;;;;;oBAOjC,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEtBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEY;;AACI;;AACI;;AAEA;;AACI;;AAA2D;AAAA;;AAAA;;AAAA,uCAAqB,MAArB;AAA2B,WAA3B;;AAA3D;;AACA;;AAA4D;AAAA;;AAAA;;AAAA,uCAAqB,YAArB;AAAiC,WAAjC;;AAA5D;;AACA;;AAA4D;AAAA;;AAAA;;AAAA,uCAAqB,OAArB;AAA4B,WAA5B;;AAA5D;;AACA;;AAA4D;AAAA;;AAAA;;AAAA,uCAAqB,MAArB;AAA2B,WAA3B;;AAA5D;;AACJ;;AACJ;;AACJ;;;;;;;;AACA;;AACI;;AACI;;AACA;;AACI;;AAA2D;AAAA;;AAAA;;AAAA,uCAAqB,MAArB;AAA2B,WAA3B;;AAA3D;;AACA;;AAA4D;AAAA;;AAAA;;AAAA,uCAAqB,YAArB;AAAiC,WAAjC;;AAA5D;;AACA;;AAA4D;AAAA;;AAAA;;AAAA,uCAAqB,OAArB;AAA4B,WAA5B;;AAA5D;;AACA;;AAA4D;AAAA;;AAAA;;AAAA,uCAAqB,MAArB;AAA2B,WAA3B;;AAA5D;;AACJ;;AACJ;;AACJ;;;;UDTCC,e;AASX,iCACSrB,MADT,EAEUpC,MAFV,EAGU0D,KAHV,EAIUC,eAJV,EAKY1D,YALZ,EAKsC;AAAA;;AAJ7B,eAAAmC,MAAA,GAAAA,MAAA;AACC,eAAApC,MAAA,GAAAA,MAAA;AACA,eAAA0D,KAAA,GAAAA,KAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACE,eAAA1D,YAAA,GAAAA,YAAA;AAEV,eAAK2D,SAAL,GAAiB,6BAAjB;AACA,eAAKC,OAAL,GAAe,IAAf;AACA,eAAKC,aAAL,GAAqB,CAAC,MAAD,EAAS,YAAT,EAAuB,OAAvB,CAArB;AACA,eAAKC,YAAL,GAAoB,KAAKD,aAAL,CAAmBE,MAAvC;AACA,eAAKxB,YAAL,GAAoB;AAClBzB,qBAAS,EAAE,IADO;AAElBb,cAAE,EAAE;AAFc,WAApB;AAIA,eAAK8C,QAAL,GAAgB;AACdiB,gBAAI,EAAE;AACJC,kBAAI,EAAE,MADF;AAEJC,sBAAQ,EAAE,iCAFN;AAGJC,qBAAO,EAAE,iCAHL;AAIJhB,sBAAQ,EAAE;AAJN,aADQ;AAOdiB,sBAAU,EAAE;AACVH,kBAAI,EAAE,aADI;AAEVC,sBAAQ,EAAE,iCAFA;AAGVC,qBAAO,EAAE,iCAHC;AAIVhB,sBAAQ,EAAE;AAJA,aAPE;AAadkB,iBAAK,EAAE;AACLJ,kBAAI,EAAE,OADD;AAELC,sBAAQ,EAAE,kCAFL;AAGLC,qBAAO,EAAE,iCAHJ;AAILhB,sBAAQ,EAAE;AAJL;AAbO,WAAhB;AAoBD;;;;qCAEO;AAAA;;AACN;AACA,iBAAKmB,UAAL,GAFM,CAIN;;AACA,iBAAKb,KAAL,CAAWc,WAAX,CAAuBjE,SAAvB,CAAiC,UAACkE,MAAD,EAAY;AAC3C,kBAAI;AACF,sBAAI,CAACC,QAAL,GAAgB,MAAH,OAAG,CAAH,kBAAQC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACC,QAAlB,CAAR,CAAG,EAAgC;AAAE1B,0BAAQ,EAAE;AAAZ,iBAAhC,CAAhB;AACD,eAFD,CAEE,OAAO6B,KAAP,EAAc;AACdzF,uBAAO,CAACC,GAAR,CAAYwF,KAAZ;AACD;AACF,aAND,EALM,CAaN;;AACA,gBAAMC,MAAM,GAAG,KAAKJ,QAAL,CAAcI,MAA7B;;AACA,gBAAIA,MAAM,KAAK,MAAf,EAAuB;AACrB,mBAAKjB,OAAL,GAAe,IAAf;AACD,aAFD,MAEO;AACL,mBAAKA,OAAL,GAAe,KAAf;AACD;AACF,W,CAED;;;;sCACYkB,Q,EAAU;AAAA;;AACpB;AACA,gBAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACvB,kBAAM1C,aAAa,GAAG,KAAKD,MAAL,CAAYO,IAAZ,CAAiB,uFAAjB,EAA4C;AAChEC,qBAAK,EAAE,MADyD;AAEhEC,sBAAM,EAAE,MAFwD;AAGhEC,yBAAS,EAAE,MAHqD;AAIhER,oBAAI,EAAE;AACJa,uBAAK,EAAE,KAAKW,aADR;AAEJd,0BAAQ,EAAE,KAAKA;AAFX,iBAJ0D;AAQhEC,yBAAS,EAAE;AARqD,eAA5C,CAAtB;AAWAZ,2BAAa,CAAC2C,WAAd,GAA4BzE,SAA5B,CAAsC,UAAC+B,IAAD,EAAU;AAC9C,oBAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;AAC/B,wBAAI,CAACwB,aAAL,CAAmBjD,OAAnB,CAA2B,UAACoE,OAAD,EAAa;AACtC,wBAAIlC,OAAO,GAAG;AACZmB,0BAAI,EAAE5B,IAAI,CAACU,QAAL,CAAciC,OAAd,EAAuBf,IADjB;AAEZd,8BAAQ,EAAEd,IAAI,CAACU,QAAL,CAAciC,OAAd,EAAuB7B;AAFrB,qBAAd;;AAKA,wBAAM8B,QAAQ,GAAG,MAAI,CAACR,QAAL,CAAc1B,QAAd,CACdmC,GADc,CACV,UAAUC,CAAV,EAAa;AAChB,6BAAOA,CAAC,CAAClB,IAAT;AACD,qBAHc,EAIdpF,OAJc,CAINiE,OAAO,CAACmB,IAJF,CAAjB;;AAMA,wBAAIgB,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnB,4BAAI,CAACR,QAAL,CAAc1B,QAAd,CAAuBlC,IAAvB,CAA4BiC,OAA5B;AACD,qBAFD,MAEO;AACL,4BAAI,CAAC2B,QAAL,CAAc1B,QAAd,CAAuBkC,QAAvB,EAAiC9B,QAAjC,GAA4CL,OAAO,CAACK,QAApD;AACD;AACF,mBAjBD;AAkBD;AACF,eArBD,EAZuB,CAmCvB;AACD,aApCD,MAoCO;AACL,kBAAMV,SAAS,GAAG,KAAKN,MAAL,CAAYO,IAAZ,CAAiB,8EAAjB,EAAwC;AACxDC,qBAAK,EAAE,MADiD;AAExDC,sBAAM,EAAE,MAFgD;AAGxDC,yBAAS,EAAE,MAH6C;AAIxDR,oBAAI,EAAE;AACJS,yBAAO,EAAE,KAAKC,QAAL,CAAc+B,QAAd;AADL,iBAJkD;AAOxD9B,yBAAS,EAAE;AAP6C,eAAxC,CAAlB;AAUAP,uBAAS,CAACsC,WAAV,GAAwBzE,SAAxB,CAAkC,UAAC+B,IAAD,EAAU;AAC1C,oBAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;AAC/B,sBAAMS,OAAO,GAAG;AACdmB,wBAAI,EAAE5B,IAAI,CAACS,OAAL,CAAamB,IADL;AAEdd,4BAAQ,EAAEd,IAAI,CAACS,OAAL,CAAaK;AAFT,mBAAhB;;AAIA,sBAAM8B,QAAQ,GAAG,MAAI,CAACR,QAAL,CAAc1B,QAAd,CACdmC,GADc,CACV,UAAUC,CAAV,EAAa;AAChB,2BAAOA,CAAC,CAAClB,IAAT;AACD,mBAHc,EAIdpF,OAJc,CAINiE,OAAO,CAACmB,IAJF,CAAjB;;AAMA,sBAAIgB,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnB,0BAAI,CAACR,QAAL,CAAc1B,QAAd,CAAuBlC,IAAvB,CAA4BiC,OAA5B;AACD,mBAFD,MAEO;AACL,0BAAI,CAAC2B,QAAL,CAAc1B,QAAd,CAAuBkC,QAAvB,EAAiC9B,QAAjC,GAA4CL,OAAO,CAACK,QAApD;AACD;AACF;AACF,eAlBD;AAmBD;AACF,W,CAED;;;;uCACoB;AAClB,gBAAIiC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAX;AACAF,gBAAI,CAACG,GAAL,GAAW,KAAK5B,SAAhB;AACAyB,gBAAI,CAACvD,IAAL,GAAY,iBAAZ;AACAuD,gBAAI,CAACI,KAAL,GAAa,IAAb;AACAJ,gBAAI,CAACK,OAAL,GAAe,OAAf;AACAJ,oBAAQ,CAACK,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDP,IAArD;AACD;;;yCAEc;AACb,gBAAI,KAAKtB,YAAL,KAAsB,KAAKW,QAAL,CAAc1B,QAAd,CAAuBgB,MAAjD,EAAyD;AACvD,mBAAKL,eAAL,CAAqBkC,QAArB,CAA8B,KAAKnB,QAAnC,EAA6CnE,SAA7C,CAAuD,UAACuF,GAAD,EAAS;AAC9D1G,uBAAO,CAACC,GAAR,CAAYyG,GAAZ;AACD,eAFD;AAGD,aAJD,MAIO;AACL,mBAAK7F,YAAL,CAAkBqD,IAAlB,CAAuB,eAAvB,EAAwC,KAAKd,YAA7C;AACD;AACF;;;;;;;yBA9JUiB,e,EAAe,mI,EAAA,uH,EAAA,+H,EAAA,kJ,EAAA,mI;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,e;AAAA,ytC;AAAA;AAAA;AChB5B;;AACI;;AACI;;AACI;;AAYA;;AAmBJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAuE;AAAA,qBAAQ,IAAAsC,YAAA,EAAR;AAAsB,aAAtB;;AAAuB;;AAAM;;AACxG;;AACJ;;AACJ;;;;AAvC0B;;AAAA;;AAYA;;AAAA;;;;;;;;;wEDCbtC,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACT3D,oBAAQ,EAAE,YADD;AAETkC,uBAAW,EAAE,yBAFJ;AAGTwB,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAawC,K,GAQT,eAAYC,IAAZ,EAAkC;AAAA;;AAC9BC,cAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACH,O;;AAGL,UAAYG,SAAZ;;AAAA,iBAAYA,SAAZ,EAAqB;AACjB;AACA;AACA;AACA;AACH,OALD,EAAYA,SAAS,KAATA,SAAS,MAArB;;;;;;;;;;;;;;;;;ACbA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,mBAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA,kC;AAAA;AAAA;ACPzB;;AACE;;AACA;;AACE;;AACF;;AACF;;;;;;;;;wEDEaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTvG,oBAAQ,EAAE,UADD;AAETkC,uBAAW,EAAE,sBAFJ;AAGTwB,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgEa+C,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBApBJ,CACP,uEADO,EAEP,oEAFO,EAGP,6FAHO,EAIP,qEAJO,EAKP,yEALO,EAMP,uEANO,EAOP,2DAPO,EAQP,gFARO,EASP,mEATO,EAUP,wEAVO,EAWP,sEAXO,EAYP,6EAZO,EAaP,uEAbO,EAcP,yEAdO,EAeP,2EAfO,EAgBP,uEAhBO,EAiBP,sEAjBO,EAkBP,2DAlBO,CAoBI;;;;4HAGFA,S,EAAS;AAAA,yBAjClB,2DAiCkB,EAhClB,yFAgCkB,EA/BlB,sFA+BkB,EA9BlB,kFA8BkB,EA7BlB,gGA6BkB,EA5BlB,yGA4BkB,EA3BlB,2FA2BkB,EA1BlB,gGA0BkB,EAzBlB,kGAyBkB;AAzBO,oBAGzB,uEAHyB,EAIzB,oEAJyB,EAKzB,6FALyB,EAMzB,qEANyB,EAOzB,yEAPyB,EAQzB,uEARyB,EASzB,2DATyB,EAUzB,gFAVyB,EAWzB,mEAXyB,EAYzB,wEAZyB,EAazB,sEAbyB,EAczB,6EAdyB,EAezB,uEAfyB,EAgBzB,yEAhByB,EAiBzB,2EAjByB,EAkBzB,uEAlByB,EAmBzB,sEAnByB,EAoBzB,2DApByB;AAyBP,S;AALP,O;;;;;wEAKFA,S,EAAS;gBAnCrB,sDAmCqB;iBAnCZ;AACRC,wBAAY,EAAE,CACZ,2DADY,EAEZ,yFAFY,EAGZ,sFAHY,EAIZ,kFAJY,EAKZ,gGALY,EAMZ,yGANY,EAOZ,2FAPY,EAQZ,gGARY,EASZ,kGATY,CADN;AAYRC,mBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,6FAHO,EAIP,qEAJO,EAKP,yEALO,EAMP,uEANO,EAOP,2DAPO,EAQP,gFARO,EASP,mEATO,EAUP,wEAVO,EAWP,sEAXO,EAYP,6EAZO,EAaP,uEAbO,EAcP,yEAdO,EAeP,2EAfO,EAgBP,uEAhBO,EAiBP,sEAjBO,EAkBP,2DAlBO,CAZD;AAgCRC,qBAAS,EAAE,EAhCH;AAiCRC,qBAAS,EAAE,CAAC,2DAAD;AAjCH,W;AAmCY,U;;;;;;;;;;;;;;;;;;AChEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUaC,W;;;;;cAAAA;;;;2BAAAA,W;AAAW,S;AAAA,kBAJX,CAAC,4DAAD,CAIW;;;;4HAAXA,W,EAAW;AAAA,yBAHL,+DAGK;AAHS,oBADnB,4DACmB,CAGT;AAJE,oBAEZ,+DAFY;AAIF,S;AAFI,O;;;;;wEAEfA,W,EAAW;gBALvB,sDAKuB;iBALd;AACNH,mBAAO,EAAE,CAAC,4DAAD,CADH;AAEND,wBAAY,EAAE,CAAC,+DAAD,CAFR;AAGNK,mBAAO,EAAE,CAAC,+DAAD;AAHH,W;AAKc,U;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,e;AAEX,mCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,qM;AAAA;AAAA;ACP5B;;AACI;;AACI;;AAAwB;;AAAa;;AACrC;;AACI;;AAA2D;;AAAK;;AAChE;;AAA2D;;AAAO;;AACtE;;AACJ;;AACJ;;;;;;;;;wEDDaA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACThH,oBAAQ,EAAE,YADD;AAETkC,uBAAW,EAAE,yBAFJ;AAGTwB,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQauD,gB;AAEX,kCAAoB/G,MAApB,EAAoC;AAAA;;AAAhB,eAAAA,MAAA,GAAAA,MAAA;AAAmB;;;;qCAE/B,CACP;;;oCAES;AACR,iBAAKA,MAAL,CAAYgH,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;;;;;;;yBATUD,gB,EAAgB,uH;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA,gB;AAAA,e;AAAA,2D;AAAA;AAAA;ACP7B;;AACI;;AAAI;;AAAyB;;AAC7B;;AAAQ;AAAA,qBAAQ,IAAAE,OAAA,EAAR;AAAiB,aAAjB;;AAAkB;;AAAkB;;AAChD;;;;;;;;wEDIaF,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTjH,oBAAQ,EAAE,aADD;AAETkC,uBAAW,EAAE,0BAFJ;AAGTwB,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;;;AER7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOa0D,iB;AAEX,qCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,sC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP9B;;AAAG;;AAAgB;;;;;;;;wEDONA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTpH,oBAAQ,EAAE,eADD;AAETkC,uBAAW,EAAE,4BAFJ;AAGTwB,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWa2D,qB;AAEX,uCACSzE,SADT,EAEkCJ,IAFlC,EAEkD;AAAA;;AADzC,eAAAI,SAAA,GAAAA,SAAA;AACyB,eAAAJ,IAAA,GAAAA,IAAA;AAEhCI,mBAAS,CAACH,YAAV,GAAyB,IAAzB;AACA,eAAK6E,gBAAL,GAAwB9E,IAAI,CAACS,OAAL,CAAaK,QAAb,KAA0B,CAAlD;AACD;;;;kCAEOiE,G,EAAK;AACX,oBAAQA,GAAR;AACE,mBAAK,CAAL;AACE,qBAAK/E,IAAL,CAAUS,OAAV,CAAkBK,QAAlB,GAA6B,CAA7B;AACA,qBAAKgE,gBAAL,GAAwB,KAAxB;AACA;;AAEF,mBAAK,CAAL;AACE,qBAAK9E,IAAL,CAAUS,OAAV,CAAkBK,QAAlB,GAA6B,CAA7B;AACA,qBAAKgE,gBAAL,GAAwB,KAAxB;AACA;;AAEF,mBAAK,CAAL;AACE,qBAAK9E,IAAL,CAAUS,OAAV,CAAkBK,QAAlB,GAA6B,CAA7B;AACA,qBAAKgE,gBAAL,GAAwB,KAAxB;AACA;AAdJ;AAgBD;;;qCAEUE,I,EAAM;AACf,mBAAOA,IAAI,KAAK,KAAKhF,IAAL,CAAUS,OAAV,CAAkBK,QAAlC;AACD;;;;;;;yBA/BU+D,qB,EAAqB,sI,EAAA,gEAItB,wEAJsB,C;AAIP,O;;;cAJdA,qB;AAAqB,0C;AAAA,iB;AAAA,e;AAAA,kd;AAAA;AAAA;ACXlC;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAA6C;;AACnD;;AAEF;;AACA;;AACE;;AAEI;;AAAwD;AAAA,qBAAS,IAAAI,OAAA,CAAQ,CAAR,CAAT;AAAmB,aAAnB;;AAAqB;;AAAW;;AACxF;;AAAyD;AAAA,qBAAS,IAAAA,OAAA,CAAQ,CAAR,CAAT;AAAmB,aAAnB;;AAAqB;;AAAa;;AAC3F;;AAAsD;AAAA,qBAAS,IAAAA,OAAA,CAAQ,CAAR,CAAT;AAAmB,aAAnB;;AAAqB;;AAAe;;AAC1F;;AACA;;AAA4E;;AAAM;;AACtF;;AACF;;AACF;;;;AApB0B;;AAAA;;AAMhB;;AAAA;;AAOuB;;AAAA;;AACC;;AAAA;;AACH;;AAAA;;AAEc;;AAAA;;AAA1B;;;;;;;;;wEDVNJ,qB,EAAqB;gBAJjC,uDAIiC;iBAJvB;AACTrH,oBAAQ,EAAE,mBADD;AAETkC,uBAAW,EAAE;AAFJ,W;AAIuB,U;;;;;;oBAI7B,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEfZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOawF,Y;AADb;AAAA;;AAEY,eAAAC,OAAA,GAAU,IAAI,4CAAJ,EAAV;AACA,eAAAC,SAAA,GAAY,eAAZ;AAkCX,S,CAhCG;;;;;oCAC2B;AAAA,gBAAnBxH,EAAmB,uEAAd,KAAKwH,SAAS;AACvB,mBAAO,KAAKD,OAAL,CAAaE,YAAb,GAA4BC,IAA5B,CAAiC,8DAAO,UAAAjH,CAAC;AAAA,qBAAIA,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASA,EAAlB;AAAA,aAAR,CAAjC,CAAP;AACH,W,CAED;;;;kCACQO,O,EAAiBoH,O,EAAe;AACpC,iBAAKrH,KAAL,CAAW,IAAI,kDAAJ,CAAU,MAAD,OAAC,CAAD,kBAAMqH,OAAN,CAAC,EAAY;AAAE/F,kBAAI,EAAE,uDAAUJ,OAAlB;AAA2BjB,qBAAO,EAAPA;AAA3B,aAAZ,CAAV,CAAX;AACH;;;gCAEKA,O,EAAiBoH,O,EAAe;AAClC,iBAAKrH,KAAL,CAAW,IAAI,kDAAJ,CAAU,MAAD,OAAC,CAAD,kBAAMqH,OAAN,CAAC,EAAY;AAAE/F,kBAAI,EAAE,uDAAUH,KAAlB;AAAyBlB,qBAAO,EAAPA;AAAzB,aAAZ,CAAV,CAAX;AACH;;;+BAEIA,O,EAAiBoH,O,EAAe;AACjC,iBAAKrH,KAAL,CAAW,IAAI,kDAAJ,CAAU,MAAD,OAAC,CAAD,kBAAMqH,OAAN,CAAC,EAAY;AAAE/F,kBAAI,EAAE,uDAAUF,IAAlB;AAAwBnB,qBAAO,EAAPA;AAAxB,aAAZ,CAAV,CAAX;AACH;;;+BAEIA,O,EAAiBoH,O,EAAe;AACjC,iBAAKrH,KAAL,CAAW,IAAI,kDAAJ,CAAU,MAAD,OAAC,CAAD,kBAAMqH,OAAN,CAAC,EAAY;AAAE/F,kBAAI,EAAE,uDAAUD,OAAlB;AAA2BpB,qBAAO,EAAPA;AAA3B,aAAZ,CAAV,CAAX;AACH,W,CAED;;;;gCACMD,M,EAAc;AAChBA,kBAAK,CAACN,EAAN,GAAWM,MAAK,CAACN,EAAN,IAAY,KAAKwH,SAA5B;AACA,iBAAKD,OAAL,CAAaK,IAAb,CAAkBtH,MAAlB;AACH,W,CAED;;;;kCAC2B;AAAA,gBAArBN,EAAqB,uEAAhB,KAAKwH,SAAW;AACvB,iBAAKD,OAAL,CAAaK,IAAb,CAAkB,IAAI,kDAAJ,CAAU;AAAE5H,gBAAE,EAAFA;AAAF,aAAV,CAAlB;AACH;;;;;;;yBAnCQsH,Y;AAAY,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBADC;;;;;wEACbA,Y,EAAY;gBADxB,wDACwB;iBADb;AAAEO,sBAAU,EAAE;AAAd,W;AACa,U;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMC,WAAW,GAAG;AAClBC,eAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,0BAAgB;AADO,SAAhB;AADS,OAApB;;UASaC,e;AAIX,iCAAoBC,IAApB,EAAqC;AAAA;;AAAjB,eAAAA,IAAA,GAAAA,IAAA;AAHpB,eAAAC,OAAA,GAAkB,0BAAlB;AACA,eAAAC,WAAA,GAAsB,KAAKD,OAAL,GAAgB,iBAAtC;AAEwC;;;;mCAE/B9F,I,EAAc;AACrB,mBAAO,KAAK6F,IAAL,CAAUG,IAAV,CAAyB,KAAKD,WAA9B,EAA2C/F,IAA3C,EAAiD0F,WAAjD,CAAP;AACD;;;;;;;yBARUE,e,EAAe,uH;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;wEAEDA,e,EAAe;gBAH3B,wDAG2B;iBAHhB;AACVH,sBAAU,EAAE;AADF,W;AAGgB,U;;;;;;;;;;;;;;;;;;;;;;ACb5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACyDwC;;AAEI;;AACJ;;;;;;AAFI;;AACA;;AAAA;;;;;;AAkBR;;;;;;AAEA;;;;;;AAMI;;AACI;;AACJ;;;;;;AAF0C;;AACtC;;AAAA;;;;;;AAyBJ;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AAyBA;;AAEI;;AACJ;;;;;;AAFI;;AACA;;AAAA;;;;;;AAeR;;;;;;AACA;;;;;;AAMI;;AAEI;;AACJ;;;;;;AAFI;;AACA;;AAAA;;;;UD5I/BQ,gB;AAqCX,kCAAoBvI,MAApB,EAAoCwI,cAApC,EAAoE;AAAA;;AAAhD,eAAAxI,MAAA,GAAAA,MAAA;AAlCpB,eAAAyI,UAAA,GAAW,KAAX,CAkCoE,CAhCpE;;AACA,eAAA3D,MAAA,GAAmB,CAAC,QAAD,EAAW,MAAX,CAAnB,CA+BoE,CA7BpE;;AACA,eAAA4D,SAAA,GAAoB,CAClB;AAAExJ,iBAAK,EAAE,GAAT;AAAcyJ,qBAAS,EAAE;AAAzB,WADkB,EAElB;AAAEzJ,iBAAK,EAAE,GAAT;AAAcyJ,qBAAS,EAAE;AAAzB,WAFkB,EAGlB;AAAEzJ,iBAAK,EAAE,GAAT;AAAcyJ,qBAAS,EAAE;AAAzB,WAHkB,EAIlB;AAAEzJ,iBAAK,EAAE,GAAT;AAAcyJ,qBAAS,EAAE;AAAzB,WAJkB,EAKlB;AAAEzJ,iBAAK,EAAE,GAAT;AAAcyJ,qBAAS,EAAE;AAAzB,WALkB,CAApB,CA4BoE,CApBpE;;AACA,eAAAC,aAAA,GAA4B,CAC1B;AAAE1J,iBAAK,EAAE,KAAT;AAAgByJ,qBAAS,EAAE;AAA3B,WAD0B,EAE1B;AAAEzJ,iBAAK,EAAE,IAAT;AAAeyJ,qBAAS,EAAE;AAA1B,WAF0B,CAA5B;AAKA,eAAAE,QAAA,GAAW,IAAI,wDAAJ,CAAc;AACvBC,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,EAAsB,KAAKC,UAA3B,CAApB,CADW;AAEvBC,0BAAc,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWF,QAA/B,CAFO;AAGvBG,wBAAY,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWH,QAA/B,CAHS;AAIvBjE,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWiE,QAA/B,CAJe;AAKvBI,eAAG,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWJ,QAA/B;AALkB,WAAd,CAAX;AAqBA,eAAAK,aAAA,GAAsB,KAAKP,QAAL,CAAcQ,GAAd,CAAkB,QAAlB,EAA4BnK,KAA5B,IAAmC,IAAnC,GAA0C,IAA1C,GAAgD,KAAtE;AAPsE;;;;qCAN9D;AAEN,gBAAI,KAAK2J,QAAL,CAAcQ,GAAd,CAAkB,QAAlB,EAA4BnK,KAA5B,IAAmC,MAAvC,EAA+C,OAAO,IAAP,CAA/C,KACK,OAAO,KAAP;AACN,W,CAID;;;;uCACU;AACR,mBAAO,KAAK2J,QAAL,CAAcQ,GAAd,CAAkB,KAAlB,KAA0BC,SAA1B,GAAsC,KAAtC,GAA6C,IAApD;AACD;;;8CAOgB;AACf,mBAAO,KAAKT,QAAL,CAAcQ,GAAd,CAAkB,YAAlB,EAAgCnK,KAAhC,IAAuC,IAAvC,GAA8C,IAA9C,GAAoD,KAA3D;AACD;;;kDAEoB;AACnB,mBAAO,KAAK2J,QAAL,CAAcQ,GAAd,CAAkB,gBAAlB,EAAoCnK,KAApC,IAA2C,IAA3C,GAAkD,IAAlD,GAAwD,KAA/D;AACD;;;gDAEkB;AACjB,mBAAO,KAAK2J,QAAL,CAAcQ,GAAd,CAAkB,cAAlB,EAAkCnK,KAAlC,IAAyC,IAAzC,GAAgD,IAAhD,GAAsD,KAA7D;AACD;;;qCAYO,CAAW;;;yCAEP;AACV,gBAAMqK,UAAU,GAAGrD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK0C,QAAL,CAAc3J,KAAhC,CAAnB;AAEA,gBAAIsK,SAAS,GAAa;AACxB1E,oBAAM,EAAEyE,UAAU,CAACzE,MADK;AAExBqE,iBAAG,EAAEI,UAAU,CAACJ,GAFQ;AAGxBM,4BAAc,EAAEF,UAAU,CAACT,UAHH;AAIxBY,wCAA0B,EAAEH,UAAU,CAACN,cAJf;AAKxBU,kCAAoB,EAAEJ,UAAU,CAACL;AALT,aAA1B;AAQA,iBAAKlJ,MAAL,CAAYgH,QAAZ,CAAqB,CAAC,UAAD,CAArB,EAAmC;AACjCxC,yBAAW,EAAE;AACXE,wBAAQ,EAAEC,IAAI,CAACiF,SAAL,CAAeJ,SAAf;AADC;AADoB,aAAnC;AAKD,W,CAED;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;qCAEW3K,K,EAAsB;AAC/B,gBAAMgL,GAAG,GAAGhL,KAAK,CAACK,KAAN,GAAcL,KAAK,CAACK,KAApB,GAA4BL,KAAK,CAACK,KAA9C;;AACA,gBAAI4K,KAAK,CAACD,GAAD,CAAT,EAAgB;AACdzK,qBAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,qBAAO;AAAC0K,0BAAU,EAAC;AAAZ,eAAP;AAED,aAJD,MAKI;AACF,qBAAO,IAAP;AACD;AAEF;;;;;;;yBApHUxB,gB,EAAgB,uH,EAAA,+H;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA,iB;AAAA,gB;AAAA,81E;AAAA;AAAA;AC5B7B;;AACI;;AACI;;AACI;;AACI;;AAIA;;AACI;;AAsCI;;AAA6B;AAAA,qBAAY,IAAAyB,YAAA,EAAZ;AAA0B,aAA1B;;AAEzB;;AACI;;AACI;;AACI;;AACJ;;AAEA;;AAAO;;AAAkB;;AACzB;;AAEI;;AAIJ;;AAKJ;;AACA;;AACI;;AACmB;;AAAI;;AAC3B;;AACJ;;AAIA;;AACI;;AACI;;AAEA;;AACJ;;AAEA;;AACI;;AAAW;;AAAe;;AAC1B;;AACI;;AAGJ;;AACJ;;AACA;;AACI;;AACkD;;AAAQ;;AAC1D;;AACmB;;AAAQ;;AAC/B;;AAEJ;;AAIA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAO;;AAAuC;;AAC9C;;AAEI;;AAAU;;AAAc;;AAExB;;AAGA;;AASR;;AACA;;AACI;;AACkD;;AAAQ;;AAC1D;;AACmB;;AAAQ;;AAC/B;;AACJ;;AAGA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAO;;AAA8D;;AACrE;;AAEI;;AAIJ;;AACJ;;AACA;;AACI;;AACkD;;AAAQ;;AAC1D;;AACmB;;AAAQ;;AAC/B;;AACJ;;AAGA;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AAAO;;AAAqD;;AAC5D;;AAEI;;AAIJ;;AACJ;;AACA;;AACI;;AACkD;;AAAQ;;AAC1D;;AAC+D;AAAA,qBAAS,IAAAA,YAAA,EAAT;AAAuB,aAAvB;;AAAyD;;AAAQ;;AACpI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA1I8B;;AAAA;;AAEQ;;AAAA;;AASkD;;AAAA;;AAW9B;;AAAA;;AAOpB;;AAAA;;AAEsD;;AAAA;;AAEE;;AAAA;;AAM1C;;AAAA;;AAQM;;AAAA;;AAQpB;;AAAA;;AAUa;;AAAA;;AAGA;;AAAA;;AAaQ;;AAAA;;AAMrB;;AAAA;;AAQiD;;AAAA;;AAS5B;;AAAA;;AAMrB;;AAAA;;AAEgD;;AAAA;;AACE;;AAAA;;AAMD;;AAAA;;AAUnD;;AAAA;;;;;;;;;wEDpJvBzB,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTzI,oBAAQ,EAAE,aADD;AAETkC,uBAAW,EAAE,0BAFJ;AAGTwB,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;;;;;AE5B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAMyG,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACED,YAAI,EAAE,SADR;AAEEC,iBAAS,EAAE;AAFb,OALqB,EASrB;AACED,YAAI,EAAE,QADR;AAEEC,iBAAS,EAAE;AAFb,OATqB,EAarB;AACED,YAAI,EAAE,UADR;AAEEC,iBAAS,EAAE;AAFb,OAbqB,CAAvB;;UAuBaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBG,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACR3D,mBAAO,EAAE,CAAC,6DAAa4D,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERpD,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;AChC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAY3E,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBoI,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAInL,OAAO,CAACyF,KAAR,CAAc0F,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIxF,CAAC,GAAG,IAAIzD,KAAJ,CAAU,yBAAyB8I,GAAzB,GAA+B,GAAzC,CAAR;AACArF,WAAC,CAACyF,IAAF,GAAS,kBAAT;AACA,gBAAMzF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDoF,8BAAwB,CAACM,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAN,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAO,YAAM,CAAClE,OAAP,GAAiB2D,wBAAjB;AACAA,8BAAwB,CAACtK,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["import { Directive, ElementRef, Input, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[NumberOnly]'\r\n})\r\nexport class StrictNumberOnlyDirective {\r\n\t\r\n  //private regex: RegExp = new RegExp('^[0-9]*$');\r\n  private regex: RegExp = new RegExp(/^[0-9]+([0-9]*){0,1}$/g);  //Decimal Number\r\n  private specialKeys: Array<string> = ['Backspace','ArrowLeft','ArrowRight'];\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n\r\n  /**\r\n   * Key board action\r\n   * @param event \r\n   */\r\n  @HostListener('keydown', ['$event'])onKeyDown(event: KeyboardEvent) {\r\n    if (this.specialKeys.indexOf(event.key) !== -1) {\r\n      return;\r\n    }\r\n    const inputValue: string = this.elementRef.nativeElement.value.concat(event.key);\r\n    console.log(event.key);\r\n    if (inputValue && !String(inputValue).match(this.regex)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Copy Paste action \r\n   * @param event \r\n   */\r\n  @HostListener('paste', ['$event']) onPaste(event) {\r\n      const clipboardData = (event.originalEvent || event).clipboardData.getData('text/plain');\r\n      if (clipboardData) {\r\n          const regEx = new RegExp('^[0-9]*$');\r\n          if(!regEx.test(clipboardData)) {\r\n              event.preventDefault();\r\n          }\r\n      }\r\n      return;\r\n  }\r\n}","import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\r\nimport { Router, NavigationStart } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { Alert, AlertType } from \"./alert.model\";\r\nimport { AlertService } from \"./alert.service\";\r\n\r\n@Component({ selector: \"alert\", templateUrl: \"alert.component.html\" })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n  @Input() id = \"default-alert\";\r\n  @Input() fade = true;\r\n\r\n  alerts: Alert[] = [];\r\n  alertSubscription: Subscription;\r\n  routeSubscription: Subscription;\r\n\r\n  constructor(private router: Router, private alertService: AlertService) {}\r\n\r\n  ngOnInit() {\r\n    // subscribe to new alert notifications\r\n    this.alertSubscription = this.alertService\r\n      .onAlert(this.id)\r\n      .subscribe((alert) => {\r\n        // clear alerts when an empty alert is received\r\n        if (!alert.message) {\r\n          // filter out alerts without 'keepAfterRouteChange' flag\r\n          this.alerts = this.alerts.filter((x) => x.keepAfterRouteChange);\r\n\r\n          // remove 'keepAfterRouteChange' flag on the rest\r\n          this.alerts.forEach((x) => delete x.keepAfterRouteChange);\r\n          return;\r\n        }\r\n\r\n        // add alert to array\r\n        this.alerts.push(alert);\r\n\r\n        // auto close alert if required\r\n        if (alert.autoClose) {\r\n          setTimeout(() => this.removeAlert(alert), 3000);\r\n        }\r\n      });\r\n\r\n    // clear alerts on location change\r\n    this.routeSubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationStart) {\r\n        this.alertService.clear(this.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // unsubscribe to avoid memory leaks\r\n    this.alertSubscription.unsubscribe();\r\n    this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    // check if already removed to prevent error on auto close\r\n    if (!this.alerts.includes(alert)) return;\r\n\r\n    if (this.fade) {\r\n      // fade out alert\r\n      this.alerts.find((x) => x === alert).fade = true;\r\n\r\n      // remove alert after faded out\r\n      setTimeout(() => {\r\n        this.alerts = this.alerts.filter((x) => x !== alert);\r\n      }, 250);\r\n    } else {\r\n      // remove alert\r\n      this.alerts = this.alerts.filter((x) => x !== alert);\r\n    }\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = [\"alert\", \"alert-dismissable\", \"w-75\", \"mx-auto\", \"rounded-pill\"];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: \"alert alert-success\",\r\n      [AlertType.Error]: \"alert alert-danger\",\r\n      [AlertType.Info]: \"alert alert-info\",\r\n      [AlertType.Warning]: \"alert alert-warning\",\r\n    };\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push(\"fade\");\r\n    }\r\n\r\n    return classes.join(\" \");\r\n  }\r\n}\r\n","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\" style=\"cursor: pointer;\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\" style=\"cursor: default;\"></span>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Inject } from \"@angular/core\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { ListDialogData, AlertOptions } from \"src/app/model/figure\";\r\nimport { FigureComponentDialog } from \"./figure.component.dialog\";\r\nimport { AlertService } from 'src/app/modules/_alert';\r\n\r\n@Component({\r\n  selector: \"app-figure-list-dialog\",\r\n  templateUrl: \"./figure.component.list.dialog.html\",\r\n  styleUrls: [\"./figure.component.css\"],\r\n})\r\nexport class FigureComponentListDialog {\r\n  alertOptions: AlertOptions;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    protected alertService: AlertService,\r\n    public listDialogRef: MatDialogRef<FigureComponentListDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: ListDialogData\r\n  ) {\r\n    listDialogRef.disableClose = true;\r\n    this.alertOptions = {\r\n      autoClose: true,\r\n      id: \"dialog-submit\"\r\n    }\r\n  }\r\n\r\n  handleClick(area) {\r\n    const dialogRef = this.dialog.open(FigureComponentDialog, {\r\n      width: \"90vh\",\r\n      height: \"none\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        disease: this.data.diseases[area],\r\n      },\r\n      autoFocus: false,\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    let isCompleted = true;\r\n    this.data.areas.forEach((disease) => {\r\n      if (this.data.diseases[disease].severity === 0) {\r\n        isCompleted = false;\r\n      }\r\n    });\r\n    if (isCompleted) {\r\n      this.listDialogRef.close(this.data);\r\n    } else {\r\n      this.alertService.warn(\"Not completed\", this.alertOptions)\r\n    }\r\n  }\r\n}\r\n","<div>\r\n    <mat-grid-list gutterSize=\"5\" cols=\"1\" rowHeight=\"4:1\">\r\n        <mat-grid-tile *ngFor=\"let area of data.areas\">\r\n            <div matRipple class=\"card\" (click)=\"handleClick(area)\"\r\n                style=\"flex: 1; height: 100%; cursor: pointer; border: 2ew\">\r\n                <div class=\"row\" style=\" background: url(../../../../../assets/figure/white.jpg)\">\r\n                    <div class=\"col-4\" style=\"text-align: center; padding-top: 2vmin;\">\r\n                        <img width=\"100%\" [src]=\"data.diseases[area].iconUrl\">\r\n                    </div>\r\n                    <div class=\"col-8\">\r\n                        <div style=\"text-align: left; padding-top: 10%;\">\r\n                            <h1 class=\"text-card\" style=\"margin-bottom: 0!important; margin-block-end: 0!important; line-height: 1em;\"> {{ data.diseases[area].name }} </h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n\r\n    </mat-grid-list>\r\n</div>\r\n<div class=\"row my-2\">\r\n    <div class=\"col button-container py-2\">\r\n        <alert id=\"dialog-submit\"></alert>\r\n        <button type=\"Button\" class=\"btn btn-primary btn-md w-75 rounded-pill\" (click)=\"onSubmit()\">Submit</button>\r\n    </div>\r\n</div>","export * from './alert.module';\r\nexport * from './alert.service';\r\nexport * from './alert.model';\r\n","import { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PostData, AlertOptions } from \"src/app/model/figure\";\r\nimport { UserInfoService } from \"src/app/service/user-info.service\";\r\nimport { AlertService } from \"src/app/modules/_alert\";\r\nimport { FigureComponentDialog } from \"./figure.component.dialog\";\r\nimport { FigureComponentListDialog } from \"./figure.component.list.dialog\";\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: \"app-figure\",\r\n  templateUrl: \"./figure.component.html\",\r\n  styleUrls: [\"./figure.component.css\"],\r\n})\r\nexport class FigureComponent implements OnInit {\r\n  diseases: any;\r\n  postData: PostData;\r\n  scriptUrl: string;\r\n  showMan: boolean;\r\n  symptomsArray: string[];\r\n  noOfSymptoms: number;\r\n  alertOptions: AlertOptions;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private userInfoService: UserInfoService,\r\n    protected alertService: AlertService\r\n  ) {\r\n    this.scriptUrl = \"assets/js/onChangeWindow.js\";\r\n    this.showMan = true;\r\n    this.symptomsArray = [\"cold\", \"soreThroat\", \"cough\"];\r\n    this.noOfSymptoms = this.symptomsArray.length;\r\n    this.alertOptions = {\r\n      autoClose: true,\r\n      id: \"main-submit\",\r\n    };\r\n    this.diseases = {\r\n      cold: {\r\n        name: \"Cold\",\r\n        imageUrl: \"../../../assets/figure/cold.jpg\",\r\n        iconUrl: \"../../../assets/figure/icon.jpg\",\r\n        severity: 0,\r\n      },\r\n      soreThroat: {\r\n        name: \"Sore Throat\",\r\n        imageUrl: \"../../../assets/figure/sore.jpg\",\r\n        iconUrl: \"../../../assets/figure/icon.jpg\",\r\n        severity: 0,\r\n      },\r\n      cough: {\r\n        name: \"Cough\",\r\n        imageUrl: \"../../../assets/figure/cough.jpg\",\r\n        iconUrl: \"../../../assets/figure/icon.jpg\",\r\n        severity: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // calling the map coordinates transforming script executor\r\n    this.loadScript();\r\n\r\n    // parse stringified data received from the previous route\r\n    this.route.queryParams.subscribe((params) => {\r\n      try {\r\n        this.postData = { ...JSON.parse(params.postData), diseases: [] };\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    // setting the showMan property\r\n    const gender = this.postData.gender;\r\n    if (gender === \"Male\") {\r\n      this.showMan = true;\r\n    } else {\r\n      this.showMan = false;\r\n    }\r\n  }\r\n\r\n  // handle the click of an area of the figure\r\n  handleClick(areaType) {\r\n    // Head area is clicked\r\n    if (areaType === \"head\") {\r\n      const listDialogRef = this.dialog.open(FigureComponentListDialog, {\r\n        width: \"90vh\",\r\n        height: \"none\",\r\n        maxHeight: \"90vh\",\r\n        data: {\r\n          areas: this.symptomsArray,\r\n          diseases: this.diseases,\r\n        },\r\n        autoFocus: false,\r\n      });\r\n\r\n      listDialogRef.afterClosed().subscribe((data) => {\r\n        if (typeof data !== \"undefined\") {\r\n          this.symptomsArray.forEach((symptom) => {\r\n            let disease = {\r\n              name: data.diseases[symptom].name,\r\n              severity: data.diseases[symptom].severity,\r\n            };\r\n\r\n            const position = this.postData.diseases\r\n              .map(function (e) {\r\n                return e.name;\r\n              })\r\n              .indexOf(disease.name);\r\n\r\n            if (position === -1) {\r\n              this.postData.diseases.push(disease);\r\n            } else {\r\n              this.postData.diseases[position].severity = disease.severity;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      // other area is clicked\r\n    } else {\r\n      const dialogRef = this.dialog.open(FigureComponentDialog, {\r\n        width: \"90vh\",\r\n        height: \"none\",\r\n        maxHeight: \"90vh\",\r\n        data: {\r\n          disease: this.diseases[areaType],\r\n        },\r\n        autoFocus: false,\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((data) => {\r\n        if (typeof data !== \"undefined\") {\r\n          const disease = {\r\n            name: data.disease.name,\r\n            severity: data.disease.severity,\r\n          };\r\n          const position = this.postData.diseases\r\n            .map(function (e) {\r\n              return e.name;\r\n            })\r\n            .indexOf(disease.name);\r\n\r\n          if (position === -1) {\r\n            this.postData.diseases.push(disease);\r\n          } else {\r\n            this.postData.diseases[position].severity = disease.severity;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // map coordinates transforming script executor\r\n  public loadScript() {\r\n    let node = document.createElement(\"script\");\r\n    node.src = this.scriptUrl;\r\n    node.type = \"text/javascript\";\r\n    node.async = true;\r\n    node.charset = \"utf-8\";\r\n    document.getElementsByTagName(\"head\")[0].appendChild(node);\r\n  }\r\n\r\n  onSubmitMain() {\r\n    if (this.noOfSymptoms === this.postData.diseases.length) {\r\n      this.userInfoService.postInfo(this.postData).subscribe((res) => {\r\n        console.log(res);\r\n      });\r\n    } else {\r\n      this.alertService.warn(\"Not completed\", this.alertOptions);\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\" style=\"height: 90vh; background: url(../../../../../assets/figure/white.jpg)\">\r\n    <div class=\"row\" style=\"height: 80%;\">\r\n        <div class=\"col \">\r\n            <ng-container *ngIf=\"showMan\">\r\n                <div>\r\n                    <img id=\"manImage\" class=\"img-human m-auto d-block\" src=\"../../../assets/figure/man.jpg\"\r\n                        usemap=\"#mapMan\" alt>\r\n                    <map name=\"mapMan\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"234,411,235\" (click)=\"handleClick('head')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"248,1081,249\" (click)=\"handleClick('soreThroat')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"249,1764,250\" (click)=\"handleClick('cough')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"261,2405,263\" (click)=\"handleClick('cold')\">\r\n                    </map>\r\n                </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!showMan\">\r\n                <div>\r\n                    <img class=\"img-human m-auto d-block\" src=\"../../../assets/figure/woman.jpg\" usemap=\"#mapWoman\" alt>\r\n                    <map name=\"mapWoman\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"248,410,247\" (click)=\"handleClick('head')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"246,1084,247\" (click)=\"handleClick('soreThroat')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"249,1756,248\" (click)=\"handleClick('cough')\">\r\n                        <area class=\"map-area\" shape=\"circle\" coords=\"249,2434,249\" (click)=\"handleClick('cold')\">\r\n                    </map>\r\n                </div>\r\n            </ng-container>\r\n            <script>\r\n                // $('img').mapster();\r\n                $('map').imageMapResize();\r\n                // $('#manImage').mapster({\r\n                //     fillColor: 'ff0000',\r\n                //     fillOpacity: 0.3\r\n                // });\r\n            </script>\r\n        </div>\r\n    </div>\r\n    <div class=\"row \" style=\"height: 10%;\">\r\n        <div class=\"col button-container \">\r\n            <alert id=\"main-submit\" fade></alert>\r\n            <button type=\"Button\" class=\"btn btn-primary btn-lg w-75 rounded-pill\" (click)=onSubmitMain()>Submit</button>\r\n        </div>\r\n    </div>\r\n</div>","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'covid-counter-app';\r\n}\r\n","<div>\r\n  <app-header></app-header>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>","import { StrictNumberOnlyDirective } from \"./component/landing/numers-only.directive\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FigureComponent } from \"./component/figure/figure.component\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatRippleModule } from \"@angular/material/core\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HeaderComponent } from \"./component/layout/header/header.component\";\r\nimport { LandingComponent } from \"./component/landing/landing.component\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatStepperModule } from \"@angular/material/stepper\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { WelcomeComponent } from \"./component/page/welcome/welcome.component\";\r\nimport { ThankYouComponent } from \"./component/page/thank-you/thank-you.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AlertModule } from \"./modules/_alert\";\r\nimport { FigureComponentDialog } from \"./component/figure/figure.component.dialog\";\r\nimport { FigureComponentListDialog } from \"./component/figure/figure.component.list.dialog\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LandingComponent,\r\n    FigureComponent,\r\n    FigureComponentDialog,\r\n    FigureComponentListDialog,\r\n    WelcomeComponent,\r\n    ThankYouComponent,\r\n    StrictNumberOnlyDirective,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatRippleModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    HttpClientModule,\r\n    AlertModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AlertComponent } from './alert.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [AlertComponent],\r\n    exports: [AlertComponent]\r\n})\r\nexport class AlertModule { }","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark \">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\">Covid Counter</a>\r\n        <form class=\"form-inline\">\r\n            <button class=\"btn btn-sm btn-outline-light\" type=\"button\">සිංහල</button>\r\n            <button class=\"btn btn-sm btn-outline-light\" type=\"button\">English</button>\r\n        </form>\r\n    </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onClick() {\r\n    this.router.navigate([\"./landing\"])\r\n  }\r\n\r\n}\r\n","\r\n<div style=\"text-align: center; \">\r\n    <h1>This is the welcome page!</h1>\r\n    <button (click)=onClick()>Go to Landing Page</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-thank-you',\r\n  templateUrl: './thank-you.component.html',\r\n  styleUrls: ['./thank-you.component.css']\r\n})\r\nexport class ThankYouComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>thank-you works!</p>\r\n","import { Component, Inject } from \"@angular/core\";\r\nimport {\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { DialogData } from \"src/app/model/figure\";\r\n\r\n@Component({\r\n  selector: \"app-figure-dialog\",\r\n  templateUrl: \"./figure.component.dialog.html\",\r\n})\r\nexport class FigureComponentDialog {\r\n  userNotResponded: boolean;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FigureComponentDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {\r\n    dialogRef.disableClose = true;\r\n    this.userNotResponded = data.disease.severity === 0;\r\n  }\r\n\r\n  onFocus(num) {\r\n    switch (num) {\r\n      case 1:\r\n        this.data.disease.severity = 1;\r\n        this.userNotResponded = false;\r\n        break;\r\n\r\n      case 2:\r\n        this.data.disease.severity = 2;\r\n        this.userNotResponded = false;\r\n        break;\r\n\r\n      case 3:\r\n        this.data.disease.severity = 3;\r\n        this.userNotResponded = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  isSelected(chip) {\r\n    return chip === this.data.disease.severity;\r\n  }\r\n}\r\n","<mat-grid-list gutterSize=\"5\" cols=\"1\" rowHeight=\"7:1\">\r\n  <mat-grid-tile rowspan=\"2\" >\r\n    <div class=\"row\" style=\"text-align: center;\">\r\n      <div class=\"col\">\r\n        <img width=\"100%\" [src]=\"data.disease.imageUrl\">\r\n      </div>\r\n    </div>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <div style=\"margin-top: 5%;\">\r\n      <h2>How is your {{ data.disease.name }} symptoms?</h2>\r\n    </div>\r\n    \r\n  </mat-grid-tile>\r\n  <mat-grid-tile rowspan=\"4\">\r\n    <mat-chip-list class=\"mat-chip-list-stacked\"\r\n      aria-orientation=\"vertical\">\r\n        <mat-chip color=\"accent\" selected=\"{{ isSelected(1) }}\" (focus)=\"onFocus(1)\">No symptoms</mat-chip>\r\n        <mat-chip color=\"primary\" selected=\"{{ isSelected(2) }}\" (focus)=\"onFocus(2)\">Mild symptoms</mat-chip>\r\n        <mat-chip color=\"warn\" selected=\"{{ isSelected(3) }}\" (focus)=\"onFocus(3)\">Severe symptoms</mat-chip>\r\n        <div style=\"padding:3%\"></div>\r\n        <mat-chip  [mat-dialog-close]=\"data\" disabled=\"{{ this.userNotResponded }}\">Submit</mat-chip>\r\n    </mat-chip-list>\r\n  </mat-grid-tile>\r\n</mat-grid-list>","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Alert, AlertType } from './alert.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { PostData } from 'src/app/model/figure'\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserInfoService {\r\n  baseUrl: string = 'https://192.168.8.1:3001'\r\n  userInfoUrl: string = this.baseUrl  + \"/users/symptoms\"\r\n  \r\n  constructor(private http:HttpClient) { }\r\n\r\n  postInfo(data: PostData):Observable<PostData> {\r\n    return this.http.post<PostData>(this.userInfoUrl, data, httpOptions)\r\n  }\r\n}\r\n","import { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, Validators, FormGroup, AbstractControl } from \"@angular/forms\";\r\nimport { ILandingdata } from \"./landing-data.model\";\r\n\r\ninterface IAge {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface IBoolean {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface IPostData{\r\n  family_members:number,\r\n  is_visited_foreign_country:string,\r\n  is_had_close_contact:string,\r\n  age:string,\r\n  gender:string\r\n}\r\n\r\n@Component({\r\n  selector: \"app-landing\",\r\n  templateUrl: \"./landing.component.html\",\r\n  styleUrls: [\"./landing.component.css\"],\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  \r\n\r\n  isOptional=false;\r\n\r\n  //options gender\r\n  gender: string[] = [\"Female\", \"Male\"];\r\n\r\n  //options age groups\r\n  ageGroups: IAge[] = [\r\n    { value: \"0\", viewValue: \"Infant (0-5 Years)\" },\r\n    { value: \"1\", viewValue: \"child (5-18 Years)\" },\r\n    { value: \"3\", viewValue: \"Young (18-30 Years)\" },\r\n    { value: \"4\", viewValue: \"Middle Age (30-60 Years)\" },\r\n    { value: \"5\", viewValue: \"Old (Above 60 Years)\" },\r\n  ];\r\n\r\n  //options recently aboard\r\n  booleanGroups: IBoolean[] = [\r\n    { value: \"Yes\", viewValue: \"Yes\" },\r\n    { value: \"No\", viewValue: \"No\" },\r\n  ];\r\n\r\n  dataForm = new FormGroup({\r\n    noOfFamily: new FormControl(\"\", [Validators.required, this.numberOnly]),\r\n    foreignContact: new FormControl(\"\", Validators.required),\r\n    closeContact: new FormControl(\"\", Validators.required),\r\n    gender: new FormControl(\"\", Validators.required),\r\n    age: new FormControl(\"\", Validators.required),\r\n  });\r\n\r\n  isGender(): boolean {\r\n    \r\n    if (this.dataForm.get('gender').value=='Male') return true;\r\n    else return false;\r\n  }\r\n\r\n  constructor(private router: Router, activatedRoute: ActivatedRoute) {}\r\n\r\n  //IsEmpty's\r\n  isEmptyAge():boolean{\r\n    return this.dataForm.get(\"age\")==undefined ? false :true\r\n  }\r\n\r\n  isEmptyGender:boolean=this.dataForm.get('gender').value==null ? true :false\r\n    \r\n    \r\n  \r\n\r\n  isEmptyNoOfFamily():boolean{\r\n    return this.dataForm.get(\"noOfFamily\").value==null ? true :false\r\n  }\r\n\r\n  isEmptyforeignContact():boolean{\r\n    return this.dataForm.get(\"foreignContact\").value==null ? true :false\r\n  }\r\n\r\n  isEmptycloseContact():boolean{\r\n    return this.dataForm.get(\"closeContact\").value==null ? true :false\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onFormSubmit(): void {\r\n    const submitData = Object.assign({}, this.dataForm.value);\r\n\r\n    let postQuery:IPostData = {\r\n      gender: submitData.gender,\r\n      age: submitData.age,\r\n      family_members: submitData.noOfFamily,\r\n      is_visited_foreign_country: submitData.foreignContact,\r\n      is_had_close_contact: submitData.closeContact,\r\n    };\r\n\r\n    this.router.navigate([\"./figure\"], {\r\n      queryParams: {\r\n        postData: JSON.stringify(postQuery),\r\n      },\r\n    });\r\n  }\r\n\r\n  //custom validation\r\n\r\n\r\n  // numberOnly(control: AbstractControl): {[key:string]:boolean} | null {\r\n  //   const inputString = String.fromCharCode(control.value);\r\n  //   const regex: RegExp = new RegExp(/^[0-9]+([0-9]*){0,1}$/g)\r\n  //   if (inputString && !String(inputString).match(regex)) {\r\n  //     alert(!String(inputString))\r\n  //     return {\"chaNotAllowed\":true};\r\n  //   }\r\n  //   else\r\n  //   return null \r\n  // }\r\n\r\n  numberOnly(event: AbstractControl): {[key:string]:boolean}| null {\r\n    const inp = event.value ? event.value : event.value;\r\n    if (isNaN(inp)) { \r\n      console.log(\"error cha present\")\r\n      return {notNumbers:true};\r\n      \r\n    }\r\n    else{\r\n      return null;\r\n    }\r\n   \r\n  }\r\n\r\n  \r\n  // forbiddenNameValidator(nameRe: RegExp): ValidatorFn {\r\n  //   return (control: AbstractControl): {[key: string]: any} | null => {\r\n  //     const forbidden = nameRe.test(control.value);\r\n  //     return forbidden ? {'forbiddenName': {value: control.value}} : null;\r\n  //   };\r\n  // }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row justify-content-center\">\r\n        <mat-card class=\"col-12 col-md-6 col-sm-6 card-container\">\r\n            <div class=\"justify-content-center\">\r\n                <div class=\"header-container\">\r\n                    <!-- <mat-card-title>COVID-19</mat-card-title>\r\n                    <mat-card-subtitle>Fill all the details to continue</mat-card-subtitle> -->\r\n                </div>\r\n                <mat-horizontal-stepper linear='true'>\r\n                    <mat-card-content>\r\n                        \r\n                        <!-- <form [formGroup]=\"dataForm\">\r\n                            <mat-step [stepControl]=\"dataForm.get('age')\">\r\n                                \r\n                                    <input formControlName=\"age\" type=\"text\">\r\n                               \r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary btn-sm btn-block\"\r\n                                        matStepperNext>Next</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n                            <mat-step [stepControl]=\"dataForm.get('gender')\">\r\n                                \r\n                                    <input formControlName=\"gender\" type=\"text\">\r\n                             \r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary btn-sm btn-block\"\r\n                                        matStepperNext>Next</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n                            <mat-step>\r\n                                \r\n                                <input formControlName=\"gender\" type=\"text\">\r\n                         \r\n                            <mat-card-actions class=\"button-container\">\r\n                                <button type=\"button\" class=\"btn btn-secondary btn-sm btn-block\"\r\n                                    matStepperNext>Next</button>\r\n                            </mat-card-actions>\r\n                        </mat-step>\r\n                            </form> -->\r\n\r\n                        \r\n                        \r\n\r\n\r\n\r\n\r\n                        <form [formGroup]=\"dataForm\" (ngSubmit)=\"onFormSubmit()\" class=\"form-container\">\r\n                            <!-- gender -->\r\n                            <mat-step [stepControl]=\"dataForm.get('gender')\">\r\n                                <div class=\"field-container\">\r\n                                    <div class=\"image-container\">\r\n                                        <img src=\"../../../assets/landing/gender.jpg\" alt=\"\">\r\n                                    </div>\r\n\r\n                                    <label>Select your Gender</label>\r\n                                    <mat-radio-group class=\"example-radio-group\"\r\n                                        aria-labelledby=\"example-radio-group-label\" formControlName=\"gender\">\r\n                                        <mat-radio-button class=\"example-radio-button\"  *ngFor=\"let i of gender\"\r\n                                            [value]=\"i\" required>\r\n                                            {{ i }}\r\n                                        </mat-radio-button>\r\n                                    </mat-radio-group>\r\n                                    <!-- <div class=\"help-block\" *ngIf=\"gender.touched &&  gender.invalid\">\r\n                                        Gender is requried\r\n                                    </div> -->\r\n                                    \r\n                                </div>\r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" [disabled]=\"!dataForm.get('gender').valid\" class=\"btn btn-secondary btn-sm btn-block\"\r\n                                        matStepperNext>Next</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n\r\n\r\n                            <!-- age -->\r\n                            <mat-step [stepControl]=\"dataForm.get('age')\">\r\n                                <div class=\"image-container\">\r\n                                    <img src=\"../../../assets/landing/maleAging.jpg\" alt=\"\" *ngIf=\"isGender()\">\r\n\r\n                                    <img src=\"../../../assets/landing/femaleAging.jpg\" alt=\"\" *ngIf=\"!isGender()\">\r\n                                </div>\r\n\r\n                                <mat-form-field class=\"field-container\" style=\"width:60%\">\r\n                                    <mat-label>Select your age</mat-label>\r\n                                    <mat-select formControlName=\"age\">\r\n                                        <mat-option *ngFor=\"let age of ageGroups\" [value]=\"age.value\">\r\n                                            {{age.viewValue}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" mat-button matStepperPrevious\r\n                                        class=\"btn btn-secondary btn-sm button-style\">Previous</button>\r\n                                    <button type=\"button\" [disabled]=\"!dataForm.get('age').valid\" class=\"btn btn-secondary btn-sm button-style\" mat-button\r\n                                        matStepperNext>Continue</button>\r\n                                </mat-card-actions>\r\n\r\n                            </mat-step>\r\n\r\n\r\n                            <!-- noOfFamily -->\r\n                            <mat-step [stepControl]=\"dataForm.get('noOfFamily')\">\r\n                                <div class=\"image-container\">\r\n                                    <img src=\"../../../assets/landing/family.jpg\" alt=\"\">\r\n                                </div>\r\n                                <mat-form-field class=\"field-container\" style=\"width:60%\">\r\n                                    <label>How many family members in your family?</label>\r\n                                    <input  matInput formControlName=\"noOfFamily\"  placeholder=\"\">\r\n                                    \r\n                                        <mat-hint>enter a number</mat-hint>\r\n  \r\n                                        <mat-error *ngIf=\"dataForm.get('noOfFamily').invalid && (dataForm.get('noOfFamily').dirty || dataForm.get('noOfFamily').touched)  && (dataForm.get('noOfFamily').errors.required)\">\r\n                                            this field is required\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\"dataForm.get('noOfFamily').invalid && (dataForm.get('noOfFamily').dirty || dataForm.get('noOfFamily').touched)  && (dataForm.get('noOfFamily').errors.numberOnly)\">\r\n                                            please enter a nummeric value\r\n                                        </mat-error>\r\n                                 \r\n                                    \r\n\r\n                                    <!-- <mat-error>This field is required</mat-error> -->\r\n                                    \r\n                                    \r\n                                </mat-form-field>\r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" mat-button matStepperPrevious\r\n                                        class=\"btn btn-secondary btn-sm button-style\">Previous</button>\r\n                                    <button type=\"button\"  [disabled]=\"!dataForm.get('noOfFamily').valid\" class=\"btn btn-secondary btn-sm button-style\" mat-button\r\n                                        matStepperNext>Continue</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n\r\n                            <!-- youForeign -->\r\n                            <mat-step [stepControl]=\"dataForm.get('foreignContact')\" >\r\n                                <div class=\"image-container\">\r\n                                    <img src=\"../../../assets/landing/familyAbroad.jpg\" alt=\"\">\r\n                                </div>\r\n                                <div class=\"field-container\">\r\n                                    <label>You or any of your family member recently travelled overseas ?</label>\r\n                                    <mat-radio-group aria-labelledby=\"example-radio-group-label\"\r\n                                        class=\"example-radio-group\" formControlName=\"foreignContact\">\r\n                                        <mat-radio-button class=\"example-radio-button\" *ngFor=\"let ans of booleanGroups\"\r\n                                            [value]=\"ans.value\">\r\n                                            {{ans.viewValue}}\r\n                                        </mat-radio-button>\r\n                                    </mat-radio-group>\r\n                                </div>\r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" mat-button matStepperPrevious\r\n                                        class=\"btn btn-secondary btn-sm button-style\">Previous</button>\r\n                                    <button type=\"button\"  [disabled]=\"!dataForm.get('foreignContact').valid\" class=\"btn btn-secondary btn-sm button-style\" mat-button\r\n                                        matStepperNext>Continue</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n\r\n                            <!-- familyForeign -->\r\n                            <mat-step [stepControl]=\"dataForm.get('closeContact')\" >\r\n                                <div class=\"image-container\">\r\n                                    <img src=\"../../../assets/landing/maleAbroad.jpg\" *ngIf=\"isGender()\" alt=\"\">\r\n                                    <img src=\"../../../assets/landing/femaleAbroad.jpg\" *ngIf=\"!isGender()\" alt=\"\">\r\n                                </div>\r\n                                <div class=\"field-container\">\r\n                                    <label>Have you had any close contact with COVID 19 patient?</label>\r\n                                    <mat-radio-group aria-labelledby=\"example-radio-group-label\"\r\n                                        class=\"example-radio-group\" formControlName=\"closeContact\">\r\n                                        <mat-radio-button class=\"example-radio-button\" *ngFor=\"let ans of booleanGroups\"\r\n                                            [value]=\"ans.value\">\r\n                                            {{ans.viewValue}}\r\n                                        </mat-radio-button>\r\n                                    </mat-radio-group>\r\n                                </div>\r\n                                <mat-card-actions class=\"button-container\">\r\n                                    <button type=\"button\" mat-button matStepperPrevious\r\n                                        class=\"btn btn-secondary btn-sm button-style\">Previous</button>\r\n                                    <button type=\"button\" type=\"submit\" class=\"btn btn-secondary btn-sm button-style\"\r\n                                    [disabled]=\"!dataForm.get('closeContact').valid\" type=\"submit\" (click)=\"onFormSubmit()\" mat-raised-button matSteppeNext>Continue</button>\r\n                                </mat-card-actions>\r\n                            </mat-step>\r\n                        </form>\r\n                    </mat-card-content>\r\n                </mat-horizontal-stepper>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LandingComponent } from './component/landing/landing.component';\r\nimport { FigureComponent } from './component/figure/figure.component';\r\nimport { WelcomeComponent } from './component/page/welcome/welcome.component';\r\nimport { ThankYouComponent } from './component/page/thank-you/thank-you.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WelcomeComponent\r\n  },\r\n  {\r\n    path: 'landing',\r\n    component: LandingComponent\r\n  },\r\n  {\r\n    path: 'figure',\r\n    component: FigureComponent\r\n  },\r\n  {\r\n    path: 'thankyou',\r\n    component: ThankYouComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}